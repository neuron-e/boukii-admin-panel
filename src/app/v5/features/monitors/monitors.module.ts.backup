import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';

// Angular Material
import { MatCardModule } from '@angular/material/card';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { MatTableModule } from '@angular/material/table';
import { MatPaginatorModule } from '@angular/material/paginator';
import { MatSortModule } from '@angular/material/sort';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatSelectModule } from '@angular/material/select';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatChipsModule } from '@angular/material/chips';
import { MatMenuModule } from '@angular/material/menu';
import { MatDialogModule } from '@angular/material/dialog';
import { MatSnackBarModule } from '@angular/material/snack-bar';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatNativeDateModule } from '@angular/material/core';
import { MatTooltipModule } from '@angular/material/tooltip';
import { MatTabsModule } from '@angular/material/tabs';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatDividerModule } from '@angular/material/divider';
import { MatBadgeModule } from '@angular/material/badge';
import { MatListModule } from '@angular/material/list';
import { MatStepperModule } from '@angular/material/stepper';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { MatSliderModule } from '@angular/material/slider';
import { MatAutocompleteModule } from '@angular/material/autocomplete';

// NgRx (for future implementation)
import { StoreModule } from '@ngrx/store';
import { EffectsModule } from '@ngrx/effects';

// Third-party libraries for scheduling
import { DragDropModule } from '@angular/cdk/drag-drop';
import { OverlayModule } from '@angular/cdk/overlay';

// Shared V5 Modules
import { SharedFormsModule } from '../../shared/forms/shared-forms.module';
import { SharedComponentsModule } from '../../shared/components/shared-components.module';

// Main Components
import { MonitorListSeasonComponent } from './components/monitor-list-season/monitor-list-season.component';
import { MonitorDetailsSeasonComponent } from './components/monitor-details-season/monitor-details-season.component';
import { MonitorFormSeasonComponent } from './components/monitor-form-season/monitor-form-season.component';
import { MonitorAvailabilityMatrixComponent } from './components/monitor-availability-matrix/monitor-availability-matrix.component';
import { MonitorScheduleCalendarComponent } from './components/monitor-schedule-calendar/monitor-schedule-calendar.component';
import { MonitorPerformanceDashboardComponent } from './components/monitor-performance-dashboard/monitor-performance-dashboard.component';

// Availability Components
import { MonitorAvailabilityFormComponent } from './components/monitor-availability-form/monitor-availability-form.component';
import { MonitorTimeSlotEditorComponent } from './components/monitor-time-slot-editor/monitor-time-slot-editor.component';
import { MonitorBulkAvailabilityComponent } from './components/monitor-bulk-availability/monitor-bulk-availability.component';
import { MonitorConflictResolverComponent } from './components/monitor-conflict-resolver/monitor-conflict-resolver.component';

// Performance Components
import { MonitorStatsWidgetComponent } from './components/monitor-stats-widget/monitor-stats-widget.component';
import { MonitorEvaluationFormComponent } from './components/monitor-evaluation-form/monitor-evaluation-form.component';
import { MonitorCertificationManagerComponent } from './components/monitor-certification-manager/monitor-certification-manager.component';
import { MonitorSkillsMatrixComponent } from './components/monitor-skills-matrix/monitor-skills-matrix.component';

// Assignment Components
import { MonitorAssignmentWizardComponent } from './components/monitor-assignment-wizard/monitor-assignment-wizard.component';
import { MonitorWorkloadAnalyzerComponent } from './components/monitor-workload-analyzer/monitor-workload-analyzer.component';
import { MonitorUtilizationChartComponent } from './components/monitor-utilization-chart/monitor-utilization-chart.component';

// Dialogs
import { MonitorDeleteConfirmDialogComponent } from './dialogs/monitor-delete-confirm-dialog/monitor-delete-confirm-dialog.component';
import { MonitorAvailabilityDialogComponent } from './dialogs/monitor-availability-dialog/monitor-availability-dialog.component';
import { MonitorAssignmentDialogComponent } from './dialogs/monitor-assignment-dialog/monitor-assignment-dialog.component';
import { MonitorEvaluationDialogComponent } from './dialogs/monitor-evaluation-dialog/monitor-evaluation-dialog.component';
import { MonitorConflictDialogComponent } from './dialogs/monitor-conflict-dialog/monitor-conflict-dialog.component';

// Services
import { MonitorSeasonService } from './services/monitor-season.service';
import { MonitorAvailabilityService } from './services/monitor-availability.service';
import { MonitorPerformanceService } from './services/monitor-performance.service';
import { MonitorSchedulingService } from './services/monitor-scheduling.service';
import { MonitorEvaluationService } from './services/monitor-evaluation.service';

// Guards
import { MonitorSeasonGuard } from './guards/monitor-season.guard';
import { MonitorAvailabilityGuard } from './guards/monitor-availability.guard';

// Resolvers
import { MonitorDetailsResolver } from './resolvers/monitor-details.resolver';
import { MonitorStatsResolver } from './resolvers/monitor-stats.resolver';
import { MonitorAvailabilityResolver } from './resolvers/monitor-availability.resolver';

// Pipes
import { MonitorStatusPipe } from './pipes/monitor-status.pipe';
import { MonitorSkillLevelPipe } from './pipes/monitor-skill-level.pipe';
import { AvailabilityStatusPipe } from './pipes/availability-status.pipe';

@NgModule({
  declarations: [
    // Main Components
    MonitorListSeasonComponent,
    MonitorDetailsSeasonComponent,
    MonitorFormSeasonComponent,
    MonitorAvailabilityMatrixComponent,
    MonitorScheduleCalendarComponent,
    MonitorPerformanceDashboardComponent,
    
    // Availability Components
    MonitorAvailabilityFormComponent,
    MonitorTimeSlotEditorComponent,
    MonitorBulkAvailabilityComponent,
    MonitorConflictResolverComponent,
    
    // Performance Components
    MonitorStatsWidgetComponent,
    MonitorEvaluationFormComponent,
    MonitorCertificationManagerComponent,
    MonitorSkillsMatrixComponent,
    
    // Assignment Components
    MonitorAssignmentWizardComponent,
    MonitorWorkloadAnalyzerComponent,
    MonitorUtilizationChartComponent,
    
    // Dialogs
    MonitorDeleteConfirmDialogComponent,
    MonitorAvailabilityDialogComponent,
    MonitorAssignmentDialogComponent,
    MonitorEvaluationDialogComponent,
    MonitorConflictDialogComponent,
    
    // Pipes
    MonitorStatusPipe,
    MonitorSkillLevelPipe,
    AvailabilityStatusPipe
  ],
  imports: [
    CommonModule,
    ReactiveFormsModule,
    RouterModule.forChild([
      {
        path: '',
        component: MonitorListSeasonComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          stats: MonitorStatsResolver
        },
        data: { 
          title: 'Monitors',
          breadcrumb: 'Monitors'
        }
      },
      {
        path: 'new',
        component: MonitorFormSeasonComponent,
        canActivate: [MonitorSeasonGuard],
        data: { 
          title: 'New Monitor',
          breadcrumb: 'New Monitor',
          mode: 'create'
        }
      },
      {
        path: 'availability-matrix',
        component: MonitorAvailabilityMatrixComponent,
        canActivate: [MonitorSeasonGuard],
        data: { 
          title: 'Monitor Availability Matrix',
          breadcrumb: 'Availability Matrix'
        }
      },
      {
        path: 'schedule-calendar',
        component: MonitorScheduleCalendarComponent,
        canActivate: [MonitorSeasonGuard],
        data: { 
          title: 'Monitor Schedule Calendar',
          breadcrumb: 'Schedule Calendar'
        }
      },
      {
        path: 'performance-dashboard',
        component: MonitorPerformanceDashboardComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          stats: MonitorStatsResolver
        },
        data: { 
          title: 'Monitor Performance Dashboard',
          breadcrumb: 'Performance Dashboard'
        }
      },
      {
        path: 'bulk-availability',
        component: MonitorBulkAvailabilityComponent,
        canActivate: [MonitorSeasonGuard],
        data: { 
          title: 'Bulk Availability Management',
          breadcrumb: 'Bulk Availability'
        }
      },
      {
        path: ':id',
        component: MonitorDetailsSeasonComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          monitor: MonitorDetailsResolver,
          availability: MonitorAvailabilityResolver
        },
        data: { 
          title: 'Monitor Details',
          breadcrumb: 'Details'
        }
      },
      {
        path: ':id/edit',
        component: MonitorFormSeasonComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          monitor: MonitorDetailsResolver
        },
        data: { 
          title: 'Edit Monitor',
          breadcrumb: 'Edit',
          mode: 'edit'
        }
      },
      {
        path: ':id/availability',
        component: MonitorAvailabilityFormComponent,
        canActivate: [MonitorSeasonGuard, MonitorAvailabilityGuard],
        resolve: {
          monitor: MonitorDetailsResolver,
          availability: MonitorAvailabilityResolver
        },
        data: { 
          title: 'Monitor Availability',
          breadcrumb: 'Availability'
        }
      },
      {
        path: ':id/performance',
        component: MonitorPerformanceDashboardComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          monitor: MonitorDetailsResolver
        },
        data: { 
          title: 'Monitor Performance',
          breadcrumb: 'Performance'
        }
      },
      {
        path: ':id/evaluations',
        component: MonitorEvaluationFormComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          monitor: MonitorDetailsResolver
        },
        data: { 
          title: 'Monitor Evaluations',
          breadcrumb: 'Evaluations'
        }
      },
      {
        path: ':id/certifications',
        component: MonitorCertificationManagerComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          monitor: MonitorDetailsResolver
        },
        data: { 
          title: 'Monitor Certifications',
          breadcrumb: 'Certifications'
        }
      },
      {
        path: ':id/assignments',
        component: MonitorAssignmentWizardComponent,
        canActivate: [MonitorSeasonGuard],
        resolve: {
          monitor: MonitorDetailsResolver
        },
        data: { 
          title: 'Monitor Assignments',
          breadcrumb: 'Assignments'
        }
      }
    ]),

    // Angular Material
    MatCardModule,
    MatButtonModule,
    MatIconModule,
    MatTableModule,
    MatPaginatorModule,
    MatSortModule,
    MatFormFieldModule,
    MatInputModule,
    MatSelectModule,
    MatCheckboxModule,
    MatChipsModule,
    MatMenuModule,
    MatDialogModule,
    MatSnackBarModule,
    MatProgressBarModule,
    MatProgressSpinnerModule,
    MatDatepickerModule,
    MatNativeDateModule,
    MatTooltipModule,
    MatTabsModule,
    MatExpansionModule,
    MatSlideToggleModule,
    MatDividerModule,
    MatBadgeModule,
    MatListModule,
    MatStepperModule,
    MatButtonToggleModule,
    MatSliderModule,
    MatAutocompleteModule,

    // CDK Modules
    DragDropModule,
    OverlayModule,

    // NgRx (future implementation)
    // StoreModule.forFeature('monitors', monitorReducer),
    // EffectsModule.forFeature([MonitorEffects]),

    // Shared Modules
    SharedFormsModule,
    SharedComponentsModule
  ],
  providers: [
    // Services
    MonitorSeasonService,
    MonitorAvailabilityService,
    MonitorPerformanceService,
    MonitorSchedulingService,
    MonitorEvaluationService,
    
    // Guards
    MonitorSeasonGuard,
    MonitorAvailabilityGuard,
    
    // Resolvers
    MonitorDetailsResolver,
    MonitorStatsResolver,
    MonitorAvailabilityResolver
  ],
  exports: [
    // Export main components for use in other modules
    MonitorListSeasonComponent,
    MonitorDetailsSeasonComponent,
    MonitorAvailabilityMatrixComponent,
    MonitorStatsWidgetComponent,
    MonitorUtilizationChartComponent,
    
    // Export pipes for use in other modules
    MonitorStatusPipe,
    MonitorSkillLevelPipe,
    AvailabilityStatusPipe
  ]
})
export class MonitorsModule { 

  constructor() {
    console.log('👨‍🏫 Monitors Module V5 loaded - Season-aware monitor management with real-time availability tracking');
  }
}