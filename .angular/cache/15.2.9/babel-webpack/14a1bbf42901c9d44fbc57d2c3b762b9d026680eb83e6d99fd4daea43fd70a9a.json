{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { filter, take } from 'rxjs/operators';\nimport { animate, style } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/animations\";\nexport class SplashScreenService {\n  constructor(router, document, animationBuilder) {\n    this.router = router;\n    this.document = document;\n    this.animationBuilder = animationBuilder;\n    this.splashScreenElem = this.document.body.querySelector('#vex-splash-screen');\n    if (this.splashScreenElem) {\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd), take(1)).subscribe(() => this.hide());\n    }\n  }\n  hide() {\n    const player = this.animationBuilder.build([style({\n      opacity: 1\n    }), animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({\n      opacity: 0\n    }))]).create(this.splashScreenElem);\n    player.onDone(() => this.splashScreenElem.remove());\n    player.play();\n  }\n}\nSplashScreenService.ɵfac = function SplashScreenService_Factory(t) {\n  return new (t || SplashScreenService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i2.AnimationBuilder));\n};\nSplashScreenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SplashScreenService,\n  factory: SplashScreenService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAgB,iBAAiB;AACvD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,MAAM,EAAEC,IAAI,QAAQ,gBAAgB;AAC7C,SAASC,OAAO,EAAoBC,KAAK,QAAQ,qBAAqB;;;;AAKtE,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,MAAc,EACIC,QAAkB,EACpCC,gBAAkC;IAFlC,WAAM,GAANF,MAAM;IACY,aAAQ,GAARC,QAAQ;IAC1B,qBAAgB,GAAhBC,gBAAgB;IAClC,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACC,aAAa,CAAC,oBAAoB,CAAC;IAE9E,IAAI,IAAI,CAACF,gBAAgB,EAAE;MACzB,IAAI,CAACH,MAAM,CAACM,MAAM,CAACC,IAAI,CACrBb,MAAM,CAACc,KAAK,IAAIA,KAAK,YAAYhB,aAAa,CAAC,EAC/CG,IAAI,CAAC,CAAC,CAAC,CACR,CAACc,SAAS,CAAC,MAAM,IAAI,CAACC,IAAI,EAAE,CAAC;;EAElC;EAEAA,IAAI;IACF,MAAMC,MAAM,GAAG,IAAI,CAACT,gBAAgB,CAACU,KAAK,CAAC,CACzCf,KAAK,CAAC;MACJgB,OAAO,EAAE;KACV,CAAC,EACFjB,OAAO,CAAC,wCAAwC,EAAEC,KAAK,CAAC;MACtDgB,OAAO,EAAE;KACV,CAAC,CAAC,CACJ,CAAC,CAACC,MAAM,CAAC,IAAI,CAACX,gBAAgB,CAAC;IAEhCQ,MAAM,CAACI,MAAM,CAAC,MAAM,IAAI,CAACZ,gBAAgB,CAACa,MAAM,EAAE,CAAC;IACnDL,MAAM,CAACM,IAAI,EAAE;EACf;;AA7BWnB,mBAAmB;mBAAnBA,mBAAmB,sCAKVL,QAAQ;AAAA;AALjBK,mBAAmB;SAAnBA,mBAAmB;EAAAoB,SAAnBpB,mBAAmB;EAAAqB,YAFlB;AAAM","names":["NavigationEnd","DOCUMENT","filter","take","animate","style","SplashScreenService","constructor","router","document","animationBuilder","splashScreenElem","body","querySelector","events","pipe","event","subscribe","hide","player","build","opacity","create","onDone","remove","play","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\@vex\\services\\splash-screen.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { filter, take } from 'rxjs/operators';\nimport { animate, AnimationBuilder, style } from '@angular/animations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SplashScreenService {\n\n  splashScreenElem: HTMLElement;\n\n  constructor(private router: Router,\n              @Inject(DOCUMENT) private document: Document,\n              private animationBuilder: AnimationBuilder) {\n    this.splashScreenElem = this.document.body.querySelector('#vex-splash-screen');\n\n    if (this.splashScreenElem) {\n      this.router.events.pipe(\n        filter(event => event instanceof NavigationEnd),\n        take(1)\n      ).subscribe(() => this.hide());\n    }\n  }\n\n  hide() {\n    const player = this.animationBuilder.build([\n      style({\n        opacity: 1\n      }),\n      animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({\n        opacity: 0\n      }))\n    ]).create(this.splashScreenElem);\n\n    player.onDone(() => this.splashScreenElem.remove());\n    player.play();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}