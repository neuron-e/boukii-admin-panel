{"ast":null,"code":"import { defaultChartOptions } from '../../../utils/default-chart-options';\nimport { ShareBottomSheetComponent } from '../../share-bottom-sheet/share-bottom-sheet.component';\nimport { scaleInOutAnimation } from '../../../animations/scale-in-out.animation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/bottom-sheet\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../chart/chart.component\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nfunction WidgetQuickLineChartComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function WidgetQuickLineChartComponent_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openSheet());\n    });\n    i0.ɵɵelement(1, \"mat-icon\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"@scaleInOut\", undefined);\n  }\n}\nexport class WidgetQuickLineChartComponent {\n  constructor(_bottomSheet) {\n    this._bottomSheet = _bottomSheet;\n    this.options = defaultChartOptions({\n      chart: {\n        type: 'area',\n        height: 100\n      }\n    });\n  }\n  ngOnInit() {}\n  openSheet() {\n    this._bottomSheet.open(ShareBottomSheetComponent);\n  }\n}\nWidgetQuickLineChartComponent.ɵfac = function WidgetQuickLineChartComponent_Factory(t) {\n  return new (t || WidgetQuickLineChartComponent)(i0.ɵɵdirectiveInject(i1.MatBottomSheet));\n};\nWidgetQuickLineChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WidgetQuickLineChartComponent,\n  selectors: [[\"vex-widget-quick-line-chart\"]],\n  inputs: {\n    icon: \"icon\",\n    value: \"value\",\n    label: \"label\",\n    iconClass: \"iconClass\",\n    options: \"options\",\n    series: \"series\"\n  },\n  decls: 11,\n  vars: 7,\n  consts: [[1, \"card\", \"relative\", \"hover:shadow-lg\", \"trans-shadow\", \"overflow-hidden\", 3, \"mouseenter\", \"mouseleave\"], [1, \"p-6\", \"flex\", \"items-center\", \"justify-between\", \"gap-6\"], [1, \"headline\", \"font-bold\", \"m-0\"], [1, \"caption\", \"text-secondary\", \"m-0\"], [1, \"rounded-full\", \"w-12\", \"h-12\", \"flex\", \"items-center\", \"justify-center\", 3, \"ngClass\"], [3, \"svgIcon\"], [3, \"options\", \"series\"], [\"class\", \"absolute -top-3 -right-3 bg-foreground shadow-xl\", \"color\", \"primary\", \"mat-icon-button\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"color\", \"primary\", \"mat-icon-button\", \"\", \"type\", \"button\", 1, \"absolute\", \"-top-3\", \"-right-3\", \"bg-foreground\", \"shadow-xl\", 3, \"click\"], [\"svgIcon\", \"mat:share\"]],\n  template: function WidgetQuickLineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mouseenter\", function WidgetQuickLineChartComponent_Template_div_mouseenter_0_listener() {\n        return ctx.showButton = true;\n      })(\"mouseleave\", function WidgetQuickLineChartComponent_Template_div_mouseleave_0_listener() {\n        return ctx.showButton = false;\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\")(3, \"h2\", 2);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\", 3);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"mat-icon\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"vex-chart\", 6);\n      i0.ɵɵtemplate(10, WidgetQuickLineChartComponent_button_10_Template, 2, 1, \"button\", 7);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.iconClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"svgIcon\", ctx.icon);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"options\", ctx.options)(\"series\", ctx.series);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showButton);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.ChartComponent, i4.MatIcon, i5.MatIconButton],\n  encapsulation: 2,\n  data: {\n    animation: [scaleInOutAnimation]\n  },\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAEA,SAASA,mBAAmB,QAAQ,sCAAsC;AAE1E,SAASC,yBAAyB,QAAQ,uDAAuD;AACjG,SAASC,mBAAmB,QAAQ,4CAA4C;;;;;;;;;;ICY9EC,iCAMsB;IANdA;MAAAA;MAAA;MAAA,OAASA,iCAAW;IAAA,EAAC;IAO3BA,8BAAyC;IAC3CA,iBAAS;;;IANDA,uCAAW;;;ADNrB,OAAM,MAAOC,6BAA6B;EAgBxCC,YAAoBC,YAA4B;IAA5B,iBAAY,GAAZA,YAAY;IAVvB,YAAO,GAAgBN,mBAAmB,CAAC;MAClDO,KAAK,EAAE;QACLC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE;;KAEX,CAAC;EAKkD;EAEpDC,QAAQ,IACR;EAEAC,SAAS;IACP,IAAI,CAACL,YAAY,CAACM,IAAI,CAACX,yBAAyB,CAAC;EACnD;;AAvBWG,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;QAA7BA,6BAA6B;EAAAS;EAAAC;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb1CrB,8BAEwE;MAFnEA;QAAA,wBAA2B,IAAI;MAAA,EAAC;QAAA,wBACL,KAAK;MAAA,EADA;MAGnCA,8BAAyD;MAElBA,YAAW;MAAAA,iBAAK;MACnDA,4BAAsC;MAAAA,YAAW;MAAAA,iBAAI;MAGvDA,8BACqE;MACnEA,8BAAsC;MACxCA,iBAAM;MAGRA,+BAA6D;MAE7DA,sFAQS;MACXA,iBAAM;;;MArBmCA,eAAW;MAAXA,+BAAW;MACRA,eAAW;MAAXA,+BAAW;MAG9CA,eAAqB;MAArBA,uCAAqB;MAEdA,eAAgB;MAAhBA,kCAAgB;MAInBA,eAAmB;MAAnBA,qCAAmB;MAGrBA,eAAgB;MAAhBA,qCAAgB;;;;;;eDPb,CAACD,mBAAmB;EAAC;EAAAuB;AAAA","names":["defaultChartOptions","ShareBottomSheetComponent","scaleInOutAnimation","i0","WidgetQuickLineChartComponent","constructor","_bottomSheet","chart","type","height","ngOnInit","openSheet","open","selectors","inputs","icon","value","label","iconClass","options","series","decls","vars","consts","template","changeDetection"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\@vex\\components\\widgets\\widget-quick-line-chart\\widget-quick-line-chart.component.ts","D:\\Projects\\el-sotano-backoffice\\src\\@vex\\components\\widgets\\widget-quick-line-chart\\widget-quick-line-chart.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { ApexOptions } from '../../chart/chart.component';\nimport { defaultChartOptions } from '../../../utils/default-chart-options';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ShareBottomSheetComponent } from '../../share-bottom-sheet/share-bottom-sheet.component';\nimport { scaleInOutAnimation } from '../../../animations/scale-in-out.animation';\n\n@Component({\n  selector: 'vex-widget-quick-line-chart',\n  templateUrl: './widget-quick-line-chart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [scaleInOutAnimation]\n})\nexport class WidgetQuickLineChartComponent implements OnInit {\n\n  @Input() icon: string;\n  @Input() value: string;\n  @Input() label: string;\n  @Input() iconClass: string;\n  @Input() options: ApexOptions = defaultChartOptions({\n    chart: {\n      type: 'area',\n      height: 100\n    }\n  });\n  @Input() series: ApexNonAxisChartSeries | ApexAxisChartSeries;\n\n  showButton: boolean;\n\n  constructor(private _bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n  }\n\n  openSheet() {\n    this._bottomSheet.open(ShareBottomSheetComponent);\n  }\n}\n\n","<div (mouseenter)=\"showButton = true\"\n     (mouseleave)=\"showButton = false\"\n     class=\"card relative hover:shadow-lg trans-shadow overflow-hidden\">\n  <div class=\"p-6 flex items-center justify-between gap-6\">\n    <div>\n      <h2 class=\"headline font-bold m-0\">{{ value }}</h2>\n      <p class=\"caption text-secondary m-0\">{{ label }}</p>\n    </div>\n\n    <div [ngClass]=\"iconClass\"\n         class=\"rounded-full w-12 h-12 flex items-center justify-center\">\n      <mat-icon [svgIcon]=\"icon\"></mat-icon>\n    </div>\n  </div>\n\n  <vex-chart [options]=\"options\" [series]=\"series\"></vex-chart>\n\n  <button (click)=\"openSheet()\"\n          *ngIf=\"showButton\"\n          @scaleInOut\n          class=\"absolute -top-3 -right-3 bg-foreground shadow-xl\"\n          color=\"primary\"\n          mat-icon-button\n          type=\"button\">\n    <mat-icon svgIcon=\"mat:share\"></mat-icon>\n  </button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}