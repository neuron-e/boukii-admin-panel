{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { ToolbarNotificationsDropdownComponent } from './toolbar-notifications-dropdown/toolbar-notifications-dropdown.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../components/popover/popover.service\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\nconst _c0 = [\"originRef\"];\nexport class ToolbarNotificationsComponent {\n  constructor(popover, cd) {\n    this.popover = popover;\n    this.cd = cd;\n  }\n  ngOnInit() {}\n  showPopover() {\n    this.dropdownOpen = true;\n    this.cd.markForCheck();\n    const popoverRef = this.popover.open({\n      content: ToolbarNotificationsDropdownComponent,\n      origin: this.originRef,\n      offsetY: 12,\n      position: [{\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }]\n    });\n    popoverRef.afterClosed$.subscribe(() => {\n      this.dropdownOpen = false;\n      this.cd.markForCheck();\n    });\n  }\n}\nToolbarNotificationsComponent.ɵfac = function ToolbarNotificationsComponent_Factory(t) {\n  return new (t || ToolbarNotificationsComponent)(i0.ɵɵdirectiveInject(i1.PopoverService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nToolbarNotificationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarNotificationsComponent,\n  selectors: [[\"vex-toolbar-notifications\"]],\n  viewQuery: function ToolbarNotificationsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.originRef = _t.first);\n    }\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"button\", 3, \"click\"], [\"originRef\", \"\"], [\"color\", \"primary\", \"svgIcon\", \"mat:notifications_active\"]],\n  template: function ToolbarNotificationsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function ToolbarNotificationsComponent_Template_button_click_0_listener() {\n        return ctx.showPopover();\n      });\n      i0.ɵɵelement(2, \"mat-icon\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"bg-hover\", ctx.dropdownOpen);\n    }\n  },\n  dependencies: [i2.MatIconButton, i3.MatIcon],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAAA,SAAgEA,UAAU,QAA2B,eAAe;AAEpH,SAASC,qCAAqC,QAAQ,2EAA2E;;;;;;AAQjI,OAAM,MAAOC,6BAA6B;EAMxCC,YAAoBC,OAAuB,EACvBC,EAAqB;IADrB,YAAO,GAAPD,OAAO;IACP,OAAE,GAAFC,EAAE;EAAsB;EAE5CC,QAAQ,IAAI;EAEZC,WAAW;IACT,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACH,EAAE,CAACI,YAAY,EAAE;IAEtB,MAAMC,UAAU,GAAG,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC;MACnCC,OAAO,EAAEX,qCAAqC;MAC9CY,MAAM,EAAE,IAAI,CAACC,SAAS;MACtBC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,CACR;QACEC,OAAO,EAAE,QAAQ;QACjBC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,QAAQ;QAClBC,QAAQ,EAAE;OACX,EACD;QACEH,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,QAAQ;QACjBC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE;OACX;KAEJ,CAAC;IAEFV,UAAU,CAACW,YAAY,CAACC,SAAS,CAAC,MAAK;MACrC,IAAI,CAACd,YAAY,GAAG,KAAK;MACzB,IAAI,CAACH,EAAE,CAACI,YAAY,EAAE;IACxB,CAAC,CAAC;EACJ;;AAvCWP,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;QAA7BA,6BAA6B;EAAAqB;EAAAC;IAAA;6BAEMxB,UAAU;;;;;;;;;;;;MCZ1DyB,oCAAwH;MAArGA;QAAA,OAASC,iBAAa;MAAA,EAAC;MACxCD,8BAAwE;MAC1EA,iBAAS;;;MAFkCA,4CAA+B","names":["ElementRef","ToolbarNotificationsDropdownComponent","ToolbarNotificationsComponent","constructor","popover","cd","ngOnInit","showPopover","dropdownOpen","markForCheck","popoverRef","open","content","origin","originRef","offsetY","position","originX","originY","overlayX","overlayY","afterClosed$","subscribe","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\layout\\toolbar\\toolbar-notifications\\toolbar-notifications.component.ts","D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\layout\\toolbar\\toolbar-notifications\\toolbar-notifications.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PopoverService } from '../../../components/popover/popover.service';\nimport { ToolbarNotificationsDropdownComponent } from './toolbar-notifications-dropdown/toolbar-notifications-dropdown.component';\n\n@Component({\n  selector: 'vex-toolbar-notifications',\n  templateUrl: './toolbar-notifications.component.html',\n  styleUrls: ['./toolbar-notifications.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarNotificationsComponent implements OnInit {\n\n  @ViewChild('originRef', { static: true, read: ElementRef }) originRef: ElementRef;\n\n  dropdownOpen: boolean;\n\n  constructor(private popover: PopoverService,\n              private cd: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n\n  showPopover() {\n    this.dropdownOpen = true;\n    this.cd.markForCheck();\n\n    const popoverRef = this.popover.open({\n      content: ToolbarNotificationsDropdownComponent,\n      origin: this.originRef,\n      offsetY: 12,\n      position: [\n        {\n          originX: 'center',\n          originY: 'top',\n          overlayX: 'center',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top',\n        },\n      ]\n    });\n\n    popoverRef.afterClosed$.subscribe(() => {\n      this.dropdownOpen = false;\n      this.cd.markForCheck();\n    });\n  }\n}\n","<button #originRef (click)=\"showPopover()\" [class.bg-hover]=\"dropdownOpen\" class=\"button\" mat-icon-button type=\"button\">\n  <mat-icon color=\"primary\" svgIcon=\"mat:notifications_active\"></mat-icon>\n</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}