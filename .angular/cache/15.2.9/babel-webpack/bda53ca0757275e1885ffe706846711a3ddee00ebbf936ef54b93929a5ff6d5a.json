{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { VexConfigName } from '../../config/config-name.model';\nimport { colorVariables } from './color-variables';\nimport { DOCUMENT } from '@angular/common';\nimport { ColorSchemeName } from '../../config/colorSchemeName';\nimport { isNil } from '../../utils/isNil';\nimport { defaultRoundedButtonBorderRadius } from '../../config/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../config/config.service\";\nimport * as i2 from \"../../services/layout.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/radio\";\nimport * as i7 from \"@angular/material/slide-toggle\";\nimport * as i8 from \"@angular/material/core\";\nfunction ConfigPanelComponent_div_0_div_8_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 24);\n  }\n}\nfunction ConfigPanelComponent_div_0_div_8_mat_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 25);\n  }\n}\nfunction ConfigPanelComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_div_8_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const colorScheme_r6 = restoredCtx.ngIf;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.isDark(colorScheme_r6) ? ctx_r9.disableDarkMode() : ctx_r9.enableDarkMode());\n    });\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵtemplate(2, ConfigPanelComponent_div_0_div_8_mat_icon_2_Template, 1, 0, \"mat-icon\", 21);\n    i0.ɵɵtemplate(3, ConfigPanelComponent_div_0_div_8_mat_icon_3_Template, 1, 0, \"mat-icon\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 23);\n    i0.ɵɵtext(5, \"DARK MODE\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const colorScheme_r6 = ctx.ngIf;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isDark(colorScheme_r6));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isDark(colorScheme_r6));\n  }\n}\nfunction ConfigPanelComponent_div_0_div_13_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 24);\n  }\n}\nfunction ConfigPanelComponent_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_div_13_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const color_r11 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.selectColor(color_r11.value));\n    });\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵtemplate(2, ConfigPanelComponent_div_0_div_13_mat_icon_2_Template, 1, 0, \"mat-icon\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"uppercase\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const color_r11 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", color_r11.value.light)(\"color\", color_r11.value.default);\n    i0.ɵɵclassProp(\"selected\", ctx_r3.isSelectedColor(color_r11.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", color_r11.value.default);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isSelectedColor(color_r11.value));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 10, color_r11.key));\n  }\n}\nfunction ConfigPanelComponent_div_0_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28);\n    i0.ɵɵelement(2, \"img\", 29);\n    i0.ɵɵelementStart(3, \"div\", 30)(4, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_div_18_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const config_r15 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.setConfig(config_r15.id, ctx_r17.ColorSchemeName.light));\n    });\n    i0.ɵɵtext(5, \"LIGHT \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_div_18_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const config_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.setConfig(config_r15.id, ctx_r19.ColorSchemeName.default));\n    });\n    i0.ɵɵtext(7, \"DEFAULT \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_div_18_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const config_r15 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.setConfig(config_r15.id, ctx_r20.ColorSchemeName.dark));\n    });\n    i0.ɵɵtext(9, \"DARK \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 34);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const config_r15 = ctx.$implicit;\n    const first_r16 = ctx.first;\n    i0.ɵɵclassProp(\"mt-6\", !first_r16);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", config_r15.imgSrc, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(config_r15.name);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"border-gray-300\": a0,\n    \"border-transparent\": a1\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    \"bg-primary border-primary\": a0,\n    \"bg-foreground border-gray-500 group-hover:bg-app-bar\": a1\n  };\n};\nfunction ConfigPanelComponent_div_0_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_div_23_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const borderRadius_r21 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r22.selectBorderRadius(borderRadius_r21));\n    });\n    i0.ɵɵelement(1, \"div\", 36);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const borderRadius_r21 = ctx.$implicit;\n    const setting_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c0, ctx_r5.isSelectedBorderRadius(borderRadius_r21, setting_r1), !ctx_r5.isSelectedBorderRadius(borderRadius_r21, setting_r1)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"border-top-left-radius\", borderRadius_r21.value + borderRadius_r21.unit);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c1, ctx_r5.isSelectedBorderRadius(borderRadius_r21, setting_r1), !ctx_r5.isSelectedBorderRadius(borderRadius_r21, setting_r1)));\n  }\n}\nconst _c2 = function (a0, a1) {\n  return {\n    \"!bg-transparent !border-solid !border-primary !text-primary\": a0,\n    \"!border-transparent\": a1\n  };\n};\nfunction ConfigPanelComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\", 2);\n    i0.ɵɵelement(2, \"mat-icon\", 3);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"Configuration\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"h5\", 5);\n    i0.ɵɵtext(7, \"THEME BASE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ConfigPanelComponent_div_0_div_8_Template, 6, 2, \"div\", 6);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 4)(11, \"h5\", 5);\n    i0.ɵɵtext(12, \"THEME COLORS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, ConfigPanelComponent_div_0_div_13_Template, 6, 12, \"div\", 7);\n    i0.ɵɵpipe(14, \"keyvalue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 4)(16, \"h5\", 5);\n    i0.ɵɵtext(17, \"PRE-BUILT STYLES\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, ConfigPanelComponent_div_0_div_18_Template, 12, 4, \"div\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 4)(20, \"h5\", 5);\n    i0.ɵɵtext(21, \"ROUNDED CORNERS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 9);\n    i0.ɵɵtemplate(23, ConfigPanelComponent_div_0_div_23_Template, 2, 10, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 4)(25, \"h5\", 5);\n    i0.ɵɵtext(26, \"BUTTON STYLE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 11)(28, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.selectButtonStyle(undefined));\n    });\n    i0.ɵɵtext(29, \" INHERIT \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ConfigPanelComponent_div_0_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.selectButtonStyle(ctx_r27.roundedButtonValue));\n    });\n    i0.ɵɵtext(31, \" ROUNDED \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"div\", 4)(33, \"h5\", 5);\n    i0.ɵɵtext(34, \"Layout\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 14)(36, \"h5\", 5);\n    i0.ɵɵtext(37, \"Orientation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"mat-slide-toggle\", 15);\n    i0.ɵɵlistener(\"change\", function ConfigPanelComponent_div_0_Template_mat_slide_toggle_change_38_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.layoutRTLChange($event));\n    });\n    i0.ɵɵpipe(39, \"async\");\n    i0.ɵɵtext(40, \"RTL\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"div\", 4)(42, \"h5\", 5);\n    i0.ɵɵtext(43, \"Toolbar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"div\", 14)(45, \"h5\", 5);\n    i0.ɵɵtext(46, \"Position\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(47, \"mat-radio-group\", 16);\n    i0.ɵɵlistener(\"change\", function ConfigPanelComponent_div_0_Template_mat_radio_group_change_47_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.toolbarPositionChange($event));\n    });\n    i0.ɵɵelementStart(48, \"mat-radio-button\", 17);\n    i0.ɵɵtext(49, \"Fixed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"mat-radio-button\", 18);\n    i0.ɵɵtext(51, \"Static\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(52, \"div\", 4)(53, \"h5\", 5);\n    i0.ɵɵtext(54, \"Footer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"div\", 14)(56, \"mat-slide-toggle\", 15);\n    i0.ɵɵlistener(\"change\", function ConfigPanelComponent_div_0_Template_mat_slide_toggle_change_56_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.footerVisibleChange($event));\n    });\n    i0.ɵɵtext(57, \"Visible \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"h5\", 5);\n    i0.ɵɵtext(59, \"Position\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"mat-radio-group\", 16);\n    i0.ɵɵlistener(\"change\", function ConfigPanelComponent_div_0_Template_mat_radio_group_change_60_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.footerPositionChange($event));\n    });\n    i0.ɵɵelementStart(61, \"mat-radio-button\", 17);\n    i0.ɵɵtext(62, \"Fixed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(63, \"mat-radio-button\", 18);\n    i0.ɵɵtext(64, \"Static\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const setting_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(9, 10, ctx_r0.colorScheme$));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 12, ctx_r0.colorVariables));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.configs);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.roundedCornerValues);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c2, !ctx_r0.isSelectedButtonStyle(undefined, setting_r1), ctx_r0.isSelectedButtonStyle(undefined, setting_r1)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(19, _c2, !ctx_r0.isSelectedButtonStyle(ctx_r0.roundedButtonValue, setting_r1), ctx_r0.isSelectedButtonStyle(ctx_r0.roundedButtonValue, setting_r1)));\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"checked\", i0.ɵɵpipeBind1(39, 14, ctx_r0.isRTL$));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"value\", setting_r1.toolbar.fixed ? \"fixed\" : \"static\");\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"checked\", setting_r1.footer.visible);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", setting_r1.footer.fixed ? \"fixed\" : \"static\");\n  }\n}\nexport class ConfigPanelComponent {\n  constructor(configService, layoutService, document) {\n    this.configService = configService;\n    this.layoutService = layoutService;\n    this.document = document;\n    this.configs = this.configService.configs;\n    this.colorVariables = colorVariables;\n    this.config$ = this.configService.config$;\n    this.isRTL$ = this.config$.pipe(map(config => config.direction === 'rtl'));\n    this.colorScheme$ = this.config$.pipe(map(config => config.style.colorScheme));\n    this.borderRadius$ = this.config$.pipe(map(config => config.style.borderRadius.value));\n    this.ConfigName = VexConfigName;\n    this.ColorSchemeName = ColorSchemeName;\n    this.selectedColor = colorVariables.blue;\n    this.roundedCornerValues = [{\n      value: 0,\n      unit: 'rem'\n    }, {\n      value: 0.25,\n      unit: 'rem'\n    }, {\n      value: 0.5,\n      unit: 'rem'\n    }, {\n      value: 0.75,\n      unit: 'rem'\n    }, {\n      value: 1,\n      unit: 'rem'\n    }, {\n      value: 1.25,\n      unit: 'rem'\n    }, {\n      value: 1.5,\n      unit: 'rem'\n    }, {\n      value: 1.75,\n      unit: 'rem'\n    }];\n    this.roundedButtonValue = defaultRoundedButtonBorderRadius;\n  }\n  setConfig(layout, colorScheme) {\n    this.configService.setConfig(layout);\n    this.configService.updateConfig({\n      style: {\n        colorScheme\n      }\n    });\n  }\n  selectColor(color) {\n    this.selectedColor = color;\n    this.configService.updateConfig({\n      style: {\n        colors: {\n          primary: {\n            default: color.default,\n            contrast: color.contrast\n          }\n        }\n      }\n    });\n  }\n  isSelectedColor(color) {\n    return color === this.selectedColor;\n  }\n  enableDarkMode() {\n    this.configService.updateConfig({\n      style: {\n        colorScheme: ColorSchemeName.dark\n      }\n    });\n  }\n  disableDarkMode() {\n    this.configService.updateConfig({\n      style: {\n        colorScheme: ColorSchemeName.default\n      }\n    });\n  }\n  layoutRTLChange(change) {\n    this.configService.updateConfig({\n      direction: change.checked ? 'rtl' : 'ltr'\n    });\n  }\n  toolbarPositionChange(change) {\n    this.configService.updateConfig({\n      toolbar: {\n        fixed: change.value === 'fixed'\n      }\n    });\n  }\n  footerVisibleChange(change) {\n    this.configService.updateConfig({\n      footer: {\n        visible: change.checked\n      }\n    });\n  }\n  footerPositionChange(change) {\n    this.configService.updateConfig({\n      footer: {\n        fixed: change.value === 'fixed'\n      }\n    });\n  }\n  isSelectedBorderRadius(borderRadius, config) {\n    return borderRadius.value === config.style.borderRadius.value && borderRadius.unit === config.style.borderRadius.unit;\n  }\n  selectBorderRadius(borderRadius) {\n    this.configService.updateConfig({\n      style: {\n        borderRadius: borderRadius\n      }\n    });\n  }\n  isSelectedButtonStyle(buttonStyle, config) {\n    if (isNil(config.style.button.borderRadius) && isNil(buttonStyle)) {\n      return true;\n    }\n    return buttonStyle?.value === config.style.button.borderRadius?.value;\n  }\n  selectButtonStyle(borderRadius) {\n    this.configService.updateConfig({\n      style: {\n        button: {\n          borderRadius: borderRadius\n        }\n      }\n    });\n  }\n  isDark(colorScheme) {\n    return colorScheme === ColorSchemeName.dark;\n  }\n}\nConfigPanelComponent.ɵfac = function ConfigPanelComponent_Factory(t) {\n  return new (t || ConfigPanelComponent)(i0.ɵɵdirectiveInject(i1.ConfigService), i0.ɵɵdirectiveInject(i2.LayoutService), i0.ɵɵdirectiveInject(DOCUMENT));\n};\nConfigPanelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConfigPanelComponent,\n  selectors: [[\"vex-config-panel\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[\"class\", \"config-panel\", 4, \"ngIf\"], [1, \"config-panel\"], [1, \"headline\", \"mb-4\"], [\"svgIcon\", \"mat:settings\", 1, \"mr-3\"], [1, \"section\"], [1, \"subheading\"], [\"class\", \"rounded-full mt-2 flex items-center cursor-pointer relative bg-contrast-black text-contrast-white select-none\", \"matRipple\", \"\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"vex-color-picker rounded-full mt-2 flex items-center cursor-pointer relative\", \"matRipple\", \"\", 3, \"selected\", \"backgroundColor\", \"color\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"rounded\", 3, \"mt-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"grid\", \"grid-cols-4\", \"gap-4\"], [\"class\", \"aspect-square bg-primary/10 flex justify-end items-end cursor-pointer border-2 hover:border-gray-200 group trans-ease-out rounded-tl\", 3, \"border-gray-300\", \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"justify-between\", \"gap-4\"], [\"color\", \"primary\", \"mat-flat-button\", \"\", \"type\", \"button\", 1, \"rounded\", \"flex-1\", \"border-2\", \"border-solid\", 3, \"ngClass\", \"click\"], [\"color\", \"primary\", \"mat-flat-button\", \"\", \"type\", \"button\", 1, \"rounded-full\", \"flex-1\", \"border-2\", \"border-solid\", 3, \"ngClass\", \"click\"], [1, \"section-content\"], [3, \"checked\", \"change\"], [1, \"flex\", \"flex-col\", \"gap-3\", 3, \"value\", \"change\"], [\"value\", \"fixed\"], [\"value\", \"static\"], [\"matRipple\", \"\", 1, \"rounded-full\", \"mt-2\", \"flex\", \"items-center\", \"cursor-pointer\", \"relative\", \"bg-contrast-black\", \"text-contrast-white\", \"select-none\", 3, \"click\"], [1, \"m-2\", \"h-6\", \"w-6\", \"rounded-full\"], [\"svgIcon\", \"mat:check\", 4, \"ngIf\"], [\"svgIcon\", \"mat:close\", 4, \"ngIf\"], [1, \"ml-1\", \"font-medium\", \"text-sm\"], [\"svgIcon\", \"mat:check\"], [\"svgIcon\", \"mat:close\"], [\"matRipple\", \"\", 1, \"vex-color-picker\", \"rounded-full\", \"mt-2\", \"flex\", \"items-center\", \"cursor-pointer\", \"relative\", 3, \"click\"], [1, \"rounded\"], [1, \"layout-image\", \"rounded\", \"overflow-hidden\", \"relative\", \"hover:bg-hover\", \"shadow-md\"], [1, \"w-full\", \"block\", 3, \"src\"], [1, \"layout-image-overlay\", \"flex\", \"items-center\", \"justify-center\", \"gap-1\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 1, \"bg-contrast-white\", \"text-contrast-black\", \"flex-none\", \"!min-w-0\", 3, \"click\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"button\", 1, \"flex-none\", \"!min-w-0\", 3, \"click\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 1, \"bg-contrast-black\", \"text-contrast-white\", \"flex-none\", \"!min-w-0\", 3, \"click\"], [1, \"text-center\", \"body-2\", \"mt-2\"], [1, \"aspect-square\", \"bg-primary/10\", \"flex\", \"justify-end\", \"items-end\", \"cursor-pointer\", \"border-2\", \"hover:border-gray-200\", \"group\", \"trans-ease-out\", \"rounded-tl\", 3, \"border-gray-300\", \"ngClass\", \"click\"], [1, \"h-7\", \"w-7\", \"border-2\", \"trans-ease-out\", 2, \"margin-bottom\", \"-2px\", \"margin-right\", \"-2px\", 3, \"ngClass\"]],\n  template: function ConfigPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ConfigPanelComponent_div_0_Template, 65, 22, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.config$));\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.MatButton, i5.MatIcon, i6.MatRadioGroup, i6.MatRadioButton, i7.MatSlideToggle, i8.MatRipple, i3.AsyncPipe, i3.UpperCasePipe, i3.KeyValuePipe],\n  styles: [\".config-panel[_ngcontent-%COMP%] {\\n  padding: var(--padding-16) var(--padding);\\n}\\n\\n.heading[_ngcontent-%COMP%] {\\n  margin-bottom: var(--padding);\\n}\\n\\n.section[_ngcontent-%COMP%] {\\n  border-bottom: 1px solid var(--foreground-divider);\\n  margin-bottom: var(--padding-16);\\n  padding-bottom: var(--padding-16);\\n}\\n.section[_ngcontent-%COMP%]:last-child {\\n  border-bottom: none;\\n}\\n\\n.section-content[_ngcontent-%COMP%] {\\n  margin-inline-start: var(--padding-12);\\n}\\n.section-content[_ngcontent-%COMP%]   .subheading[_ngcontent-%COMP%] {\\n  margin-top: var(--padding);\\n}\\n\\n.subheading[_ngcontent-%COMP%] {\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n  font-size: 0.75rem;\\n  line-height: 1rem;\\n  font-weight: 500;\\n  text-transform: uppercase;\\n  color: var(--text-secondary);\\n}\\n\\n.layout[_ngcontent-%COMP%]    + .layout[_ngcontent-%COMP%] {\\n  margin-top: var(--padding);\\n}\\n\\n.layout-image[_ngcontent-%COMP%]:hover   .layout-image-overlay[_ngcontent-%COMP%] {\\n  background: rgba(0, 0, 0, 0.7);\\n  opacity: 1;\\n  visibility: visible;\\n}\\n.layout-image[_ngcontent-%COMP%]   .layout-image-overlay[_ngcontent-%COMP%] {\\n  border-radius: var(--border-radius);\\n  bottom: 0;\\n  height: 100%;\\n  left: 0;\\n  opacity: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  transition: var(--trans-ease-out);\\n  visibility: hidden;\\n  width: 100%;\\n}\\n.layout-image[_ngcontent-%COMP%]   .layout-image-overlay[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 0 8px;\\n}\\n\\n.vex-color-picker[_ngcontent-%COMP%] {\\n  -webkit-user-select: none;\\n          user-select: none;\\n  transition: var(--trans-ease-out);\\n}\\n.vex-color-picker[_ngcontent-%COMP%]:hover, .vex-color-picker.selected[_ngcontent-%COMP%] {\\n  background: currentColor !important;\\n}\\n.vex-color-picker[_ngcontent-%COMP%]:hover   p[_ngcontent-%COMP%], .vex-color-picker[_ngcontent-%COMP%]:hover   div[_ngcontent-%COMP%], .vex-color-picker.selected[_ngcontent-%COMP%]   p[_ngcontent-%COMP%], .vex-color-picker.selected[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n.vex-color-picker[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  transition: var(--trans-ease-out);\\n}\\n\\n.color[_ngcontent-%COMP%] {\\n  align-items: center;\\n  border-radius: 50%;\\n  box-shadow: var(--elevation-z8);\\n  display: flex;\\n  flex-direction: row;\\n  height: 36px;\\n  justify-content: center;\\n  margin-inline-end: var(--padding-16);\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 36px;\\n}\\n.color.light[_ngcontent-%COMP%] {\\n  background: white;\\n  color: #000;\\n}\\n.color.dark[_ngcontent-%COMP%] {\\n  background: #303030;\\n  color: white;\\n}\\n.color.flat[_ngcontent-%COMP%] {\\n  background: #f5f5f5;\\n  color: #000;\\n}\\n\\nmat-slide-toggle[_ngcontent-%COMP%]    + mat-slide-toggle[_ngcontent-%COMP%], mat-slide-toggle[_ngcontent-%COMP%]    + mat-checkbox[_ngcontent-%COMP%], mat-checkbox[_ngcontent-%COMP%]    + mat-slide-toggle[_ngcontent-%COMP%], mat-checkbox[_ngcontent-%COMP%]    + mat-checkbox[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-top: var(--padding-12);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9AdmV4L2NvbXBvbmVudHMvY29uZmlnLXBhbmVsL2NvbmZpZy1wYW5lbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlDQUFBO0FBQ0Y7O0FBRUE7RUFDRSw2QkFBQTtBQUNGOztBQUVBO0VBQ0Usa0RBQUE7RUFDQSxnQ0FBQTtFQUNBLGlDQUFBO0FBQ0Y7QUFDRTtFQUNFLG1CQUFBO0FBQ0o7O0FBR0E7RUFDRSxzQ0FBQTtBQUFGO0FBRUU7RUFDRSwwQkFBQTtBQUFKOztBQUtFO0VBQUEsZ0JBQUE7RUFBQSxtQkFBQTtFQUFBLGtCQUFBO0VBQUEsaUJBQUE7RUFBQSxnQkFBQTtFQUFBLHlCQUFBO0VBQUE7QUFBQTs7QUFHRjtFQUNFLDBCQUFBO0FBREY7O0FBT0k7RUFDRSw4QkFBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtBQUpOO0FBUUU7RUFDRSxtQ0FBQTtFQUNBLFNBQUE7RUFDQSxZQUFBO0VBQ0EsT0FBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxNQUFBO0VBQ0EsaUNBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFOSjtBQVFJO0VBQ0UsY0FBQTtBQU5OOztBQVdBO0VBQ0UseUJBQUE7VUFBQSxpQkFBQTtFQUNBLGlDQUFBO0FBUkY7QUFVRTtFQUNFLG1DQUFBO0FBUko7QUFVSTtFQUNFLFlBQUE7QUFSTjtBQVlFO0VBQ0UsaUNBQUE7QUFWSjs7QUFlQTtFQUNFLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSwrQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLG9DQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQkFBQTtFQUNBLFdBQUE7QUFaRjtBQWNFO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0FBWko7QUFlRTtFQUNFLG1CQUFBO0VBQ0EsWUFBQTtBQWJKO0FBZ0JFO0VBQ0UsbUJBQUE7RUFDQSxXQUFBO0FBZEo7O0FBa0JBOzs7O0VBSUUsY0FBQTtFQUNBLDZCQUFBO0FBZkYiLCJzb3VyY2VzQ29udGVudCI6WyIuY29uZmlnLXBhbmVsIHtcbiAgcGFkZGluZzogdmFyKC0tcGFkZGluZy0xNikgdmFyKC0tcGFkZGluZyk7XG59XG5cbi5oZWFkaW5nIHtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tcGFkZGluZyk7XG59XG5cbi5zZWN0aW9uIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLWZvcmVncm91bmQtZGl2aWRlcik7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLXBhZGRpbmctMTYpO1xuICBwYWRkaW5nLWJvdHRvbTogdmFyKC0tcGFkZGluZy0xNik7XG5cbiAgJjpsYXN0LWNoaWxkIHtcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xuICB9XG59XG5cbi5zZWN0aW9uLWNvbnRlbnQge1xuICBtYXJnaW4taW5saW5lLXN0YXJ0OiB2YXIoLS1wYWRkaW5nLTEyKTtcblxuICAuc3ViaGVhZGluZyB7XG4gICAgbWFyZ2luLXRvcDogdmFyKC0tcGFkZGluZyk7XG4gIH1cbn1cblxuLnN1YmhlYWRpbmcge1xuICBAYXBwbHkgbXktNCB1cHBlcmNhc2UgdGV4dC14cyB0ZXh0LXNlY29uZGFyeSBmb250LW1lZGl1bTtcbn1cblxuLmxheW91dCArIC5sYXlvdXQge1xuICBtYXJnaW4tdG9wOiB2YXIoLS1wYWRkaW5nKTtcbn1cblxuLmxheW91dC1pbWFnZSB7XG5cbiAgJjpob3ZlciB7XG4gICAgLmxheW91dC1pbWFnZS1vdmVybGF5IHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICAgIH1cbiAgfVxuXG4gIC5sYXlvdXQtaW1hZ2Utb3ZlcmxheSB7XG4gICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gICAgYm90dG9tOiAwO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBsZWZ0OiAwO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICB0cmFuc2l0aW9uOiB2YXIoLS10cmFucy1lYXNlLW91dCk7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgYnV0dG9uIHtcbiAgICAgIHBhZGRpbmc6IDAgOHB4O1xuICAgIH1cbiAgfVxufVxuXG4udmV4LWNvbG9yLXBpY2tlciB7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICB0cmFuc2l0aW9uOiB2YXIoLS10cmFucy1lYXNlLW91dCk7XG5cbiAgJjpob3ZlciwgJi5zZWxlY3RlZCB7XG4gICAgYmFja2dyb3VuZDogY3VycmVudENvbG9yICFpbXBvcnRhbnQ7XG5cbiAgICBwLCBkaXYge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cbiAgfVxuXG4gIHAge1xuICAgIHRyYW5zaXRpb246IHZhcigtLXRyYW5zLWVhc2Utb3V0KTtcbiAgfVxufVxuXG5cbi5jb2xvciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm94LXNoYWRvdzogdmFyKC0tZWxldmF0aW9uLXo4KTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgaGVpZ2h0OiAzNnB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLWlubGluZS1lbmQ6IHZhcigtLXBhZGRpbmctMTYpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiAzNnB4O1xuXG4gICYubGlnaHQge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGNvbG9yOiAjMDAwO1xuICB9XG5cbiAgJi5kYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAjMzAzMDMwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gICYuZmxhdCB7XG4gICAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcbiAgICBjb2xvcjogIzAwMDtcbiAgfVxufVxuXG5tYXQtc2xpZGUtdG9nZ2xlICsgbWF0LXNsaWRlLXRvZ2dsZSxcbm1hdC1zbGlkZS10b2dnbGUgKyBtYXQtY2hlY2tib3gsXG5tYXQtY2hlY2tib3ggKyBtYXQtc2xpZGUtdG9nZ2xlLFxubWF0LWNoZWNrYm94ICsgbWF0LWNoZWNrYm94IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IHZhcigtLXBhZGRpbmctMTIpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["map","VexConfigName","colorVariables","DOCUMENT","ColorSchemeName","isNil","defaultRoundedButtonBorderRadius","i0","ctx_r9","undefined","ConfigPanelComponent","constructor","configService","layoutService","document","configs","config$","pipe","config","direction","style","colorScheme","borderRadius","value","blue","unit","setConfig","layout","updateConfig","selectColor","color","selectedColor","colors","primary","default","contrast","isSelectedColor","enableDarkMode","dark","disableDarkMode","layoutRTLChange","change","checked","toolbarPositionChange","toolbar","fixed","footerVisibleChange","footer","visible","footerPositionChange","isSelectedBorderRadius","selectBorderRadius","isSelectedButtonStyle","buttonStyle","button","selectButtonStyle","isDark","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\components\\config-panel\\config-panel.component.ts","D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\components\\config-panel\\config-panel.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\nimport { ConfigService } from '../../config/config.service';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { map } from 'rxjs/operators';\nimport { LayoutService } from '../../services/layout.service';\nimport { MatRadioChange } from '@angular/material/radio';\nimport { VexConfigName } from '../../config/config-name.model';\nimport { ColorVariable, colorVariables } from './color-variables';\nimport { DOCUMENT } from '@angular/common';\nimport { ColorSchemeName } from '../../config/colorSchemeName';\nimport { Observable } from 'rxjs';\nimport { VexConfig } from '../../config/vex-config.interface';\nimport { CSSValue } from '../../interfaces/css-value.type';\nimport { isNil } from '../../utils/isNil';\nimport { defaultRoundedButtonBorderRadius } from '../../config/constants';\n\n@Component({\n  selector: 'vex-config-panel',\n  templateUrl: './config-panel.component.html',\n  styleUrls: ['./config-panel.component.scss']\n})\nexport class ConfigPanelComponent {\n\n  configs: VexConfig[] = this.configService.configs;\n  colorVariables: Record<string, ColorVariable> = colorVariables;\n\n  config$: Observable<VexConfig> = this.configService.config$;\n\n  isRTL$: Observable<boolean> = this.config$.pipe(\n    map(config => config.direction === 'rtl')\n  );\n\n  colorScheme$: Observable<ColorSchemeName> = this.config$.pipe(\n    map(config => config.style.colorScheme)\n  );\n\n  borderRadius$: Observable<number> = this.config$.pipe(\n    map(config => config.style.borderRadius.value)\n  );\n\n  ConfigName = VexConfigName;\n  ColorSchemeName = ColorSchemeName;\n  selectedColor = colorVariables.blue;\n\n  roundedCornerValues: CSSValue[] = [\n    {\n      value: 0,\n      unit: 'rem'\n    },\n    {\n      value: 0.25,\n      unit: 'rem'\n    },\n    {\n      value: 0.5,\n      unit: 'rem'\n    },\n    {\n      value: 0.75,\n      unit: 'rem'\n    },\n    {\n      value: 1,\n      unit: 'rem'\n    },\n    {\n      value: 1.25,\n      unit: 'rem'\n    },\n    {\n      value: 1.5,\n      unit: 'rem'\n    },\n    {\n      value: 1.75,\n      unit: 'rem'\n    }\n  ];\n\n  roundedButtonValue: CSSValue = defaultRoundedButtonBorderRadius;\n\n  constructor(private configService: ConfigService,\n              private layoutService: LayoutService,\n              @Inject(DOCUMENT) private document: Document) { }\n\n  setConfig(layout: VexConfigName, colorScheme: ColorSchemeName): void {\n    this.configService.setConfig(layout);\n    this.configService.updateConfig({\n      style: {\n        colorScheme\n      }\n    });\n  }\n\n  selectColor(color: ColorVariable): void {\n    this.selectedColor = color;\n    this.configService.updateConfig({\n      style: {\n        colors: {\n          primary: {\n            default: color.default,\n            contrast: color.contrast\n          }\n        }\n      }\n    });\n  }\n\n  isSelectedColor(color: ColorVariable): boolean {\n    return color === this.selectedColor;\n  }\n\n  enableDarkMode(): void {\n    this.configService.updateConfig({\n      style: {\n        colorScheme: ColorSchemeName.dark\n      }\n    });\n  }\n\n  disableDarkMode(): void {\n    this.configService.updateConfig({\n      style: {\n        colorScheme: ColorSchemeName.default\n      }\n    });\n  }\n\n  layoutRTLChange(change: MatSlideToggleChange): void {\n    this.configService.updateConfig({\n      direction: change.checked ? 'rtl' : 'ltr'\n    });\n  }\n\n  toolbarPositionChange(change: MatRadioChange): void {\n    this.configService.updateConfig({\n      toolbar: {\n        fixed: change.value === 'fixed'\n      }\n    });\n  }\n\n  footerVisibleChange(change: MatSlideToggleChange): void {\n    this.configService.updateConfig({\n      footer: {\n        visible: change.checked\n      }\n    });\n  }\n\n  footerPositionChange(change: MatRadioChange): void {\n    this.configService.updateConfig({\n      footer: {\n        fixed: change.value === 'fixed'\n      }\n    });\n  }\n\n  isSelectedBorderRadius(borderRadius: CSSValue, config: VexConfig): boolean {\n    return borderRadius.value === config.style.borderRadius.value && borderRadius.unit === config.style.borderRadius.unit;\n  }\n\n  selectBorderRadius(borderRadius: CSSValue): void {\n    this.configService.updateConfig({\n      style: {\n        borderRadius: borderRadius\n      }\n    });\n  }\n\n  isSelectedButtonStyle(buttonStyle: CSSValue | undefined, config: VexConfig): boolean {\n    if (isNil(config.style.button.borderRadius) && isNil(buttonStyle)) {\n      return true;\n    }\n\n    return buttonStyle?.value === config.style.button.borderRadius?.value;\n  }\n\n  selectButtonStyle(borderRadius: CSSValue | undefined): void {\n    this.configService.updateConfig({\n      style: {\n        button: {\n          borderRadius: borderRadius\n        }\n      }\n    });\n  }\n\n  isDark(colorScheme: ColorSchemeName): boolean {\n    return colorScheme === ColorSchemeName.dark;\n  }\n}\n","<div *ngIf=\"config$ | async as setting\" class=\"config-panel\">\n  <h2 class=\"headline mb-4\">\n    <mat-icon class=\"mr-3\" svgIcon=\"mat:settings\"></mat-icon>\n    <span>Configuration</span>\n  </h2>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">THEME BASE</h5>\n\n    <div (click)=\"isDark(colorScheme) ? disableDarkMode() : enableDarkMode()\"\n         *ngIf=\"colorScheme$ | async as colorScheme\"\n         class=\"rounded-full mt-2 flex items-center cursor-pointer relative bg-contrast-black text-contrast-white select-none\"\n         matRipple>\n      <div class=\"m-2 h-6 w-6 rounded-full\">\n        <mat-icon *ngIf=\"isDark(colorScheme)\" svgIcon=\"mat:check\"></mat-icon>\n        <mat-icon *ngIf=\"!isDark(colorScheme)\" svgIcon=\"mat:close\"></mat-icon>\n      </div>\n      <p class=\"ml-1 font-medium text-sm\">DARK MODE</p>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">THEME COLORS</h5>\n\n    <div (click)=\"selectColor(color.value)\" *ngFor=\"let color of colorVariables | keyvalue\"\n         [class.selected]=\"isSelectedColor(color.value)\"\n         [style.backgroundColor]=\"color.value.light\"\n         [style.color]=\"color.value.default\"\n         class=\"vex-color-picker rounded-full mt-2 flex items-center cursor-pointer relative\"\n         matRipple>\n      <div [style.backgroundColor]=\"color.value.default\"\n           class=\"m-2 h-6 w-6 rounded-full\">\n        <mat-icon *ngIf=\"isSelectedColor(color.value)\" svgIcon=\"mat:check\"></mat-icon>\n      </div>\n      <p class=\"ml-1 font-medium text-sm\">{{ color.key | uppercase }}</p>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">PRE-BUILT STYLES</h5>\n\n    <div *ngFor=\"let config of configs; let first = first\"\n         [class.mt-6]=\"!first\"\n         class=\"rounded\">\n      <div class=\"layout-image rounded overflow-hidden relative hover:bg-hover shadow-md\">\n        <img [src]=\"config.imgSrc\" class=\"w-full block\">\n        <div class=\"layout-image-overlay flex items-center justify-center gap-1\">\n          <button (click)=\"setConfig(config.id, ColorSchemeName.light)\"\n                  class=\"bg-contrast-white text-contrast-black flex-none !min-w-0\"\n                  mat-raised-button\n                  type=\"button\">LIGHT\n          </button>\n          <button (click)=\"setConfig(config.id, ColorSchemeName.default)\"\n                  color=\"primary\"\n                  class=\"flex-none !min-w-0\"\n                  mat-raised-button\n                  type=\"button\">DEFAULT\n          </button>\n          <button (click)=\"setConfig(config.id, ColorSchemeName.dark)\"\n                  class=\"bg-contrast-black text-contrast-white flex-none !min-w-0\"\n                  mat-raised-button\n                  type=\"button\">DARK\n          </button>\n        </div>\n      </div>\n      <div class=\"text-center body-2 mt-2\">{{ config.name }}</div>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">ROUNDED CORNERS</h5>\n\n    <div class=\"grid grid-cols-4 gap-4\">\n      <div (click)=\"selectBorderRadius(borderRadius)\"\n           *ngFor=\"let borderRadius of roundedCornerValues\"\n           [class.border-gray-300]=\"\"\n           [ngClass]=\"{ 'border-gray-300': isSelectedBorderRadius(borderRadius, setting), 'border-transparent': !isSelectedBorderRadius(borderRadius, setting) }\"\n           class=\"aspect-square bg-primary/10 flex justify-end items-end cursor-pointer border-2 hover:border-gray-200 group trans-ease-out rounded-tl\">\n        <div [ngClass]=\"{ 'bg-primary border-primary': isSelectedBorderRadius(borderRadius, setting), 'bg-foreground border-gray-500 group-hover:bg-app-bar': !isSelectedBorderRadius(borderRadius, setting) }\"\n             [style.border-top-left-radius]=\"borderRadius.value + borderRadius.unit\"\n             class=\"h-7 w-7 border-2 trans-ease-out\"\n             style=\"margin-bottom: -2px; margin-right: -2px\"></div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">BUTTON STYLE</h5>\n\n    <div class=\"flex justify-between gap-4\">\n      <button (click)=\"selectButtonStyle(undefined)\"\n              [ngClass]=\"{ '!bg-transparent !border-solid !border-primary !text-primary': !isSelectedButtonStyle(undefined, setting), '!border-transparent': isSelectedButtonStyle(undefined, setting) }\"\n              class=\"rounded flex-1 border-2 border-solid\"\n              color=\"primary\"\n              mat-flat-button\n              type=\"button\">\n        INHERIT\n      </button>\n      <button (click)=\"selectButtonStyle(roundedButtonValue)\"\n              [ngClass]=\"{ '!bg-transparent !border-solid !border-primary !text-primary': !isSelectedButtonStyle(roundedButtonValue, setting), '!border-transparent': isSelectedButtonStyle(roundedButtonValue, setting) }\"\n              class=\"rounded-full flex-1 border-2 border-solid\"\n              color=\"primary\"\n              mat-flat-button\n              type=\"button\">\n        ROUNDED\n      </button>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">Layout</h5>\n\n    <div class=\"section-content\">\n      <h5 class=\"subheading\">Orientation</h5>\n\n      <mat-slide-toggle (change)=\"layoutRTLChange($event)\" [checked]=\"isRTL$ | async\">RTL</mat-slide-toggle>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">Toolbar</h5>\n\n    <div class=\"section-content\">\n      <h5 class=\"subheading\">Position</h5>\n\n      <mat-radio-group (change)=\"toolbarPositionChange($event)\"\n                       [value]=\"setting.toolbar.fixed ? 'fixed' : 'static'\"\n                       class=\"flex flex-col gap-3\">\n        <mat-radio-button value=\"fixed\">Fixed</mat-radio-button>\n        <mat-radio-button value=\"static\">Static</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h5 class=\"subheading\">Footer</h5>\n\n    <div class=\"section-content\">\n      <mat-slide-toggle (change)=\"footerVisibleChange($event)\" [checked]=\"setting.footer.visible\">Visible\n      </mat-slide-toggle>\n\n      <h5 class=\"subheading\">Position</h5>\n\n      <mat-radio-group (change)=\"footerPositionChange($event)\"\n                       [value]=\"setting.footer.fixed ? 'fixed' : 'static'\"\n                       class=\"flex flex-col gap-3\">\n        <mat-radio-button value=\"fixed\">Fixed</mat-radio-button>\n        <mat-radio-button value=\"static\">Static</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}