{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/el-sotano-backoffice/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { signInWithEmailAndPassword, signOut, onAuthStateChanged, getAuth } from '@angular/fire/auth';\nimport { createUserWithEmailAndPassword } from '@angular/fire/auth';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { getFirestore } from '@angular/fire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./userService\";\nexport class AuthService {\n  constructor(auth, router, userService) {\n    this.auth = auth;\n    this.router = router;\n    this.userService = userService;\n    this.user = null;\n    const user = JSON.parse(localStorage.getItem('sotanoUser'));\n    if (user) {\n      this.user = user;\n    }\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        this.user = user;\n        localStorage.setItem('sotanoUser', JSON.stringify(user));\n      } else {\n        this.user = null;\n        localStorage.removeItem('sotanoUser');\n      }\n    });\n  }\n  login(email, password) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const auth = getAuth();\n        const userCredential = yield signInWithEmailAndPassword(auth, email, password);\n        if (userCredential.user) {\n          const user = _this.getUsers();\n          localStorage.setItem('sotanoUser', JSON.stringify(userCredential.user));\n          _this.router.navigate(['/menu']);\n        }\n      } catch (error) {\n        console.error('Error during login:', error);\n      }\n    })();\n  }\n  register(email, password) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const auth = getAuth();\n        yield createUserWithEmailAndPassword(auth, email, password);\n        _this2.router.navigate(['/menu']);\n      } catch (error) {\n        console.error('Error during registration:', error);\n      }\n    })();\n  }\n  logout() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield signOut(_this3.auth);\n      _this3.user = null;\n      localStorage.removeItem('sotanoUser');\n    })();\n  }\n  isLoggedIn() {\n    return this.user !== null;\n  }\n  getUsers() {\n    return _asyncToGenerator(function* () {\n      const db = getFirestore();\n      const usersRef = collection(db, 'users');\n      const snapshot = yield getDocs(usersRef);\n      const users = snapshot.docs.map(doc => doc.data());\n      return users;\n    })();\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Auth), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.UserService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["signInWithEmailAndPassword","signOut","onAuthStateChanged","getAuth","createUserWithEmailAndPassword","collection","getDocs","getFirestore","AuthService","constructor","auth","router","userService","user","JSON","parse","localStorage","getItem","setItem","stringify","removeItem","login","email","password","userCredential","getUsers","navigate","error","console","register","logout","isLoggedIn","db","usersRef","snapshot","users","docs","map","doc","data","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\service\\AuthService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Auth, signInWithEmailAndPassword, signOut, onAuthStateChanged, getAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '@firebase/auth';\r\nimport { createUserWithEmailAndPassword } from '@angular/fire/auth';\r\nimport { UserService } from './userService';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { getFirestore } from '@angular/fire/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user: User | null = null;\r\n\r\n  constructor(private auth: Auth,private router: Router, private userService: UserService) {\r\n    const user = JSON.parse(localStorage.getItem('sotanoUser'));\r\n    if (user) {\r\n      this.user = user;\r\n    }\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        this.user = user;\r\n        localStorage.setItem('sotanoUser', JSON.stringify(user));\r\n      } else {\r\n        this.user = null;\r\n        localStorage.removeItem('sotanoUser');\r\n      }\r\n    });\r\n  }\r\n\r\n  async login(email: string, password: string) {\r\n    try {\r\n      const auth = getAuth();\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      if (userCredential.user) {\r\n        const user = this.getUsers();\r\n        localStorage.setItem('sotanoUser', JSON.stringify(userCredential.user));\r\n        this.router.navigate(['/menu']);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  }\r\n\r\n  async register(email: string, password: string): Promise<void> {\r\n    try {\r\n      const auth = getAuth();\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      this.router.navigate(['/menu']);\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    await signOut(this.auth);\r\n    this.user = null;\r\n    localStorage.removeItem('sotanoUser');\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.user !== null;\r\n  }\r\n\r\n  async getUsers() {\r\n    const db = getFirestore();\r\n    const usersRef = collection(db, 'users');\r\n    const snapshot = await getDocs(usersRef);\r\n    const users = snapshot.docs.map(doc => doc.data());\r\n    return users;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}