{"ast":null,"code":"import { map, startWith, switchMap } from 'rxjs/operators';\nimport { MegaMenuComponent } from '../../components/mega-menu/mega-menu.component';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/layout.service\";\nimport * as i2 from \"../../config/config.service\";\nimport * as i3 from \"../../services/navigation.service\";\nimport * as i4 from \"../../components/popover/popover.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/menu\";\nimport * as i9 from \"./toolbar-user/toolbar-user.component\";\nimport * as i10 from \"../navigation/navigation.component\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"../../components/navigation-item/navigation-item.component\";\nconst _c0 = function () {\n  return [\"/\"];\n};\nfunction ToolbarComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵelement(1, \"img\", 15);\n    i0.ɵɵelementStart(2, \"h1\", 16);\n    i0.ɵɵtext(3, \"EL SOTANO\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"hidden\", !ctx_r0.mobileQuery);\n  }\n}\nfunction ToolbarComponent_div_6_vex_navigation_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vex-navigation-item\", 19);\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", item_r6);\n  }\n}\nfunction ToolbarComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, ToolbarComponent_div_6_vex_navigation_item_1_Template, 1, 1, \"vex-navigation-item\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r1.mobileQuery);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.navigationItems);\n  }\n}\nfunction ToolbarComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"vex-toolbar-user\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ToolbarComponent_vex_navigation_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"vex-navigation\");\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r4.mobileQuery);\n  }\n}\nexport class ToolbarComponent {\n  constructor(layoutService, configService, navigationService, popoverService) {\n    this.layoutService = layoutService;\n    this.configService = configService;\n    this.navigationService = navigationService;\n    this.popoverService = popoverService;\n    this.navigationItems = this.navigationService.items;\n    this.isHorizontalLayout$ = this.configService.config$.pipe(map(config => config.layout === 'horizontal'));\n    this.isVerticalLayout$ = this.configService.config$.pipe(map(config => config.layout === 'vertical'));\n    this.isNavbarInToolbar$ = this.configService.config$.pipe(map(config => config.navbar.position === 'in-toolbar'));\n    this.isNavbarBelowToolbar$ = this.configService.config$.pipe(map(config => config.navbar.position === 'below-toolbar'));\n    this.userVisible$ = this.configService.config$.pipe(map(config => config.toolbar.user.visible));\n    this.megaMenuOpen$ = of(false);\n  }\n  openQuickpanel() {\n    this.layoutService.openQuickpanel();\n  }\n  openSidenav() {\n    this.layoutService.openSidenav();\n  }\n  openMegaMenu(origin) {\n    this.megaMenuOpen$ = of(this.popoverService.open({\n      content: MegaMenuComponent,\n      origin,\n      offsetY: 12,\n      position: [{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }]\n    })).pipe(switchMap(popoverRef => popoverRef.afterClosed$.pipe(map(() => false))), startWith(true));\n  }\n  openSearch() {\n    this.layoutService.openSearch();\n  }\n}\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(i0.ɵɵdirectiveInject(i1.LayoutService), i0.ɵɵdirectiveInject(i2.ConfigService), i0.ɵɵdirectiveInject(i3.NavigationService), i0.ɵɵdirectiveInject(i4.PopoverService));\n};\nToolbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"vex-toolbar\"]],\n  hostVars: 2,\n  hostBindings: function ToolbarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"shadow-b\", ctx.hasShadow);\n    }\n  },\n  inputs: {\n    mobileQuery: \"mobileQuery\",\n    hasShadow: \"hasShadow\"\n  },\n  decls: 26,\n  vars: 22,\n  consts: [[1, \"toolbar\", \"w-full\", \"px-gutter\", \"flex\", \"items-center\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"svgIcon\", \"mat:menu\"], [\"class\", \"ltr:mr-4 rtl:ml-4 block flex items-center\", 3, \"routerLink\", 4, \"ngIf\"], [\"class\", \"px-gutter flex-none flex items-center\", 3, \"hidden\", 4, \"ngIf\"], [1, \"flex-1\"], [1, \"-mx-1\", \"flex\", \"items-center\"], [\"class\", \"px-1\", 4, \"ngIf\"], [\"overlapTrigger\", \"false\", \"xPosition\", \"before\", \"yPosition\", \"below\"], [\"languageMenu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [\"svgIcon\", \"flag:united-states\"], [\"svgIcon\", \"flag:germany\"], [3, \"hidden\", 4, \"ngIf\"], [1, \"ltr:mr-4\", \"rtl:ml-4\", \"block\", \"flex\", \"items-center\", 3, \"routerLink\"], [\"alt\", \"Logo\", \"src\", \"assets/img/demo/logo.svg\", 1, \"w-8\", \"select-none\"], [1, \"title\", \"ltr:pl-4\", \"rtl:pr-4\", \"m-0\", \"select-none\"], [1, \"px-gutter\", \"flex-none\", \"flex\", \"items-center\"], [3, \"item\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\"], [1, \"px-1\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ToolbarComponent_Template_button_click_2_listener() {\n        return ctx.openSidenav();\n      });\n      i0.ɵɵelement(3, \"mat-icon\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, ToolbarComponent_a_4_Template, 4, 4, \"a\", 3);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵtemplate(6, ToolbarComponent_div_6_Template, 2, 3, \"div\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelement(9, \"span\", 5);\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵtemplate(11, ToolbarComponent_div_11_Template, 2, 0, \"div\", 7);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementStart(13, \"mat-menu\", 8, 9)(15, \"button\", 10);\n      i0.ɵɵelement(16, \"mat-icon\", 11);\n      i0.ɵɵelementStart(17, \"span\");\n      i0.ɵɵtext(18, \"English\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 10);\n      i0.ɵɵelement(20, \"mat-icon\", 12);\n      i0.ɵɵelementStart(21, \"span\");\n      i0.ɵɵtext(22, \"German\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(23, ToolbarComponent_vex_navigation_23_Template, 1, 2, \"vex-navigation\", 13);\n      i0.ɵɵpipe(24, \"async\");\n      i0.ɵɵpipe(25, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"container\", i0.ɵɵpipeBind1(1, 8, ctx.isVerticalLayout$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"hidden\", !ctx.mobileQuery);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 10, ctx.isVerticalLayout$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 12, i0.ɵɵpipeBind1(8, 14, ctx.isVerticalLayout$) && ctx.isNavbarInToolbar$));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(12, 16, ctx.userVisible$));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(24, 18, i0.ɵɵpipeBind1(25, 20, ctx.isVerticalLayout$) && ctx.isNavbarBelowToolbar$));\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.MatIconButton, i7.MatIcon, i8.MatMenu, i8.MatMenuItem, i9.ToolbarUserComponent, i10.NavigationComponent, i11.RouterLink, i12.NavigationItemComponent, i5.AsyncPipe],\n  styles: [\"[_nghost-%COMP%] {\\n  background: var(--toolbar-background);\\n  box-sizing: border-box;\\n  color: var(--toolbar-color);\\n  display: block;\\n  white-space: nowrap;\\n  width: 100%;\\n  z-index: var(--toolbar-z-index);\\n}\\n\\n.toolbar[_ngcontent-%COMP%] {\\n  height: var(--toolbar-height);\\n}\\n\\na[_ngcontent-%COMP%] {\\n  color: var(--toolbar-color);\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9AdmV4L2xheW91dC90b29sYmFyL3Rvb2xiYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQ0FBQTtFQUNBLHNCQUFBO0VBQ0EsMkJBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsK0JBQUE7QUFDRjs7QUFFQTtFQUNFLDZCQUFBO0FBQ0Y7O0FBRUE7RUFDRSwyQkFBQTtFQUNBLHFCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGJhY2tncm91bmQ6IHZhcigtLXRvb2xiYXItYmFja2dyb3VuZCk7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGNvbG9yOiB2YXIoLS10b29sYmFyLWNvbG9yKTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiB2YXIoLS10b29sYmFyLXotaW5kZXgpO1xufVxuXG4udG9vbGJhciB7XG4gIGhlaWdodDogdmFyKC0tdG9vbGJhci1oZWlnaHQpO1xufVxuXG5hIHtcbiAgY29sb3I6IHZhcigtLXRvb2xiYXItY29sb3IpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,EAAEC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;AAG1D,SAASC,iBAAiB,QAAQ,gDAAgD;AAClF,SAAqBC,EAAE,QAAQ,MAAM;;;;;;;;;;;;;;;;;;;ICFnCC,6BAEqD;IACnDA,0BAAwE;IACxEA,8BAAkF;IAAAA,yBAAS;IAAAA,iBAAK;;;;IAH/FA,uDAAoB;IAGjBA,eAA6B;IAA7BA,6CAA6B;;;;;IAmEjCA,0CAA8F;;;;IAApCA,8BAAa;;;;;IAHzEA,+BAEmD;IACjDA,wGAA8F;IAChGA,iBAAM;;;;IAHDA,4CAA4B;IAEOA,eAAkB;IAAlBA,gDAAkB;;;;;IA4BxDA,+BAA+C;IAC7CA,mCAAqC;IACvCA,iBAAM;;;;;IAgBVA,iCAC8D;;;;IAA9CA,4CAA4B;;;AD7G5C,OAAM,MAAOC,gBAAgB;EAkB3BC,YAAoBC,aAA4B,EAC5BC,aAA4B,EAC5BC,iBAAoC,EACpCC,cAA8B;IAH9B,kBAAa,GAAbH,aAAa;IACb,kBAAa,GAAbC,aAAa;IACb,sBAAiB,GAAjBC,iBAAiB;IACjB,mBAAc,GAAdC,cAAc;IAblC,oBAAe,GAAG,IAAI,CAACD,iBAAiB,CAACE,KAAK;IAE9C,wBAAmB,GAAwB,IAAI,CAACH,aAAa,CAACI,OAAO,CAACC,IAAI,CAACd,GAAG,CAACe,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,YAAY,CAAC,CAAC;IACzH,sBAAiB,GAAwB,IAAI,CAACP,aAAa,CAACI,OAAO,CAACC,IAAI,CAACd,GAAG,CAACe,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,UAAU,CAAC,CAAC;IACrH,uBAAkB,GAAwB,IAAI,CAACP,aAAa,CAACI,OAAO,CAACC,IAAI,CAACd,GAAG,CAACe,MAAM,IAAIA,MAAM,CAACE,MAAM,CAACC,QAAQ,KAAK,YAAY,CAAC,CAAC;IACjI,0BAAqB,GAAwB,IAAI,CAACT,aAAa,CAACI,OAAO,CAACC,IAAI,CAACd,GAAG,CAACe,MAAM,IAAIA,MAAM,CAACE,MAAM,CAACC,QAAQ,KAAK,eAAe,CAAC,CAAC;IACvI,iBAAY,GAAwB,IAAI,CAACT,aAAa,CAACI,OAAO,CAACC,IAAI,CAACd,GAAG,CAACe,MAAM,IAAIA,MAAM,CAACI,OAAO,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC;IAE/G,kBAAa,GAAwBjB,EAAE,CAAC,KAAK,CAAC;EAKQ;EAEtDkB,cAAc;IACZ,IAAI,CAACd,aAAa,CAACc,cAAc,EAAE;EACrC;EAEAC,WAAW;IACT,IAAI,CAACf,aAAa,CAACe,WAAW,EAAE;EAClC;EAEAC,YAAY,CAACC,MAAgC;IAC3C,IAAI,CAACC,aAAa,GAAGtB,EAAE,CACrB,IAAI,CAACO,cAAc,CAACgB,IAAI,CAAC;MACvBC,OAAO,EAAEzB,iBAAiB;MAC1BsB,MAAM;MACNI,OAAO,EAAE,EAAE;MACXX,QAAQ,EAAE,CACR;QACEY,OAAO,EAAE,OAAO;QAChBC,OAAO,EAAE,QAAQ;QACjBC,QAAQ,EAAE,OAAO;QACjBC,QAAQ,EAAE;OACX,EACD;QACEH,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,QAAQ;QACjBC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE;OACX;KAEJ,CAAC,CACH,CAACnB,IAAI,CACJZ,SAAS,CAACgC,UAAU,IAAIA,UAAU,CAACC,YAAY,CAACrB,IAAI,CAACd,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,EACvEC,SAAS,CAAC,IAAI,CAAC,CAChB;EACH;EAEAmC,UAAU;IACR,IAAI,CAAC5B,aAAa,CAAC4B,UAAU,EAAE;EACjC;;AA5DW9B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA+B;EAAAC;EAAAC;IAAA;;;;;;;;;;;;;MCd7BlC,8BAAsG;;MACpGA,iCAA4F;MAApFA;QAAA,OAASmC,iBAAa;MAAA,EAAC;MAC7BnC,8BAAwC;MAC1CA,iBAAS;MAETA,6DAKI;;MA+DJA,iEAIM;;;MAENA,0BAA4B;MAE5BA,+BAAqC;MAuBnCA,mEAEM;;MAENA,uCAA8F;MAE1FA,gCAAkD;MAClDA,6BAAM;MAAAA,wBAAO;MAAAA,iBAAO;MAGtBA,mCAAsB;MACpBA,gCAA4C;MAC5CA,6BAAM;MAAAA,uBAAM;MAAAA,iBAAO;MAM3BA,0FAC8D;;;;;MA3HzDA,wEAA6C;MAChBA,eAA6B;MAA7BA,0CAA6B;MAIzDA,eAA+B;MAA/BA,mEAA+B;MAoE7BA,eAA+D;MAA/DA,oHAA+D;MA+B7DA,eAA0B;MAA1BA,+DAA0B;MAkBnBA,gBAAkE;MAAlEA,yHAAkE","names":["map","startWith","switchMap","MegaMenuComponent","of","i0","ToolbarComponent","constructor","layoutService","configService","navigationService","popoverService","items","config$","pipe","config","layout","navbar","position","toolbar","user","visible","openQuickpanel","openSidenav","openMegaMenu","origin","megaMenuOpen$","open","content","offsetY","originX","originY","overlayX","overlayY","popoverRef","afterClosed$","openSearch","selectors","hostVars","hostBindings","ctx"],"sourceRoot":"","sources":["D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\layout\\toolbar\\toolbar.component.ts","D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\layout\\toolbar\\toolbar.component.html"],"sourcesContent":["import { Component, ElementRef, HostBinding, Input } from '@angular/core';\nimport { LayoutService } from '../../services/layout.service';\nimport { ConfigService } from '../../config/config.service';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { NavigationService } from '../../services/navigation.service';\nimport { PopoverService } from '../../components/popover/popover.service';\nimport { MegaMenuComponent } from '../../components/mega-menu/mega-menu.component';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'vex-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n\n  @Input() mobileQuery: boolean;\n\n  @Input()\n  @HostBinding('class.shadow-b')\n  hasShadow: boolean;\n\n  navigationItems = this.navigationService.items;\n\n  isHorizontalLayout$: Observable<boolean> = this.configService.config$.pipe(map(config => config.layout === 'horizontal'));\n  isVerticalLayout$: Observable<boolean> = this.configService.config$.pipe(map(config => config.layout === 'vertical'));\n  isNavbarInToolbar$: Observable<boolean> = this.configService.config$.pipe(map(config => config.navbar.position === 'in-toolbar'));\n  isNavbarBelowToolbar$: Observable<boolean> = this.configService.config$.pipe(map(config => config.navbar.position === 'below-toolbar'));\n  userVisible$: Observable<boolean> = this.configService.config$.pipe(map(config => config.toolbar.user.visible));\n\n  megaMenuOpen$: Observable<boolean> = of(false);\n\n  constructor(private layoutService: LayoutService,\n              private configService: ConfigService,\n              private navigationService: NavigationService,\n              private popoverService: PopoverService) { }\n\n  openQuickpanel(): void {\n    this.layoutService.openQuickpanel();\n  }\n\n  openSidenav(): void {\n    this.layoutService.openSidenav();\n  }\n\n  openMegaMenu(origin: ElementRef | HTMLElement): void {\n    this.megaMenuOpen$ = of(\n      this.popoverService.open({\n        content: MegaMenuComponent,\n        origin,\n        offsetY: 12,\n        position: [\n          {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n          },\n          {\n            originX: 'end',\n            originY: 'bottom',\n            overlayX: 'end',\n            overlayY: 'top',\n          },\n        ]\n      })\n    ).pipe(\n      switchMap(popoverRef => popoverRef.afterClosed$.pipe(map(() => false))),\n      startWith(true),\n    );\n  }\n\n  openSearch(): void {\n    this.layoutService.openSearch();\n  }\n}\n","<div [class.container]=\"isVerticalLayout$ | async\" class=\"toolbar w-full px-gutter flex items-center\">\n  <button (click)=\"openSidenav()\" [class.hidden]=\"!mobileQuery\" mat-icon-button type=\"button\">\n    <mat-icon svgIcon=\"mat:menu\"></mat-icon>\n  </button>\n\n  <a *ngIf=\"isVerticalLayout$ | async\"\n     [routerLink]=\"['/']\"\n     class=\"ltr:mr-4 rtl:ml-4 block flex items-center\">\n    <img alt=\"Logo\" class=\"w-8 select-none\" src=\"assets/img/demo/logo.svg\"/>\n    <h1 [class.hidden]=\"!mobileQuery\" class=\"title ltr:pl-4 rtl:pr-4 m-0 select-none\">EL SOTANO</h1>\n  </a>\n\n  <!--<button *ngIf=\"isHorizontalLayout$ | async\"\n          [class.hidden]=\"mobileQuery\"\n          [matMenuTriggerFor]=\"addNewMenu\"\n          color=\"primary\"\n          mat-flat-button\n          type=\"button\">Add New\n  </button>\n\n  <mat-menu #addNewMenu=\"matMenu\" [overlapTrigger]=\"false\" xPosition=\"after\" yPosition=\"below\">\n    <button mat-menu-item>\n      <mat-icon svgIcon=\"mat:person_add\"></mat-icon>\n      <span>Add Contact</span>\n    </button>\n\n    <button mat-menu-item>\n      <mat-icon svgIcon=\"mat:done_all\"></mat-icon>\n      <span>Add Task</span>\n    </button>\n\n    <button mat-menu-item>\n      <mat-icon svgIcon=\"mat:assignment_turned_in\"></mat-icon>\n      <span>Add Project</span>\n    </button>\n\n    <button [matMenuTriggerFor]=\"documentMenu\" mat-menu-item>\n      <mat-icon svgIcon=\"mat:ballot\"></mat-icon>\n      <span>Add Document</span>\n    </button>\n  </mat-menu>\n\n  <mat-menu #documentMenu=\"matMenu\">\n    <button mat-menu-item>\n      <mat-icon svgIcon=\"mat:description\"></mat-icon>\n      <span>Add Quote</span>\n    </button>\n\n    <button mat-menu-item>\n      <mat-icon svgIcon=\"mat:assignment\"></mat-icon>\n      <span>Add Invoice</span>\n    </button>\n\n    <button mat-menu-item>\n      <mat-icon svgIcon=\"mat:receipt\"></mat-icon>\n      <span>Add Receipt</span>\n    </button>\n  </mat-menu>\n\n  <div #megaMenuOriginRef class=\"ltr:ml-2 rtl:mr-2\">\n    <button *ngIf=\"isHorizontalLayout$ | async\"\n            [class.hidden]=\"mobileQuery\"\n            (click)=\"openMegaMenu(megaMenuOriginRef)\"\n            [ngClass]=\"{ 'bg-primary/10': megaMenuOpen$ | async }\"\n            color=\"primary\"\n            mat-button\n            type=\"button\">\n      <span>Mega Menu</span>\n      <mat-icon class=\"icon-sm\" svgIcon=\"mat:arrow_drop_down\"></mat-icon>\n    </button>\n  </div>-->\n\n\n  <div *ngIf=\"(isVerticalLayout$ | async) && isNavbarInToolbar$ | async\"\n       [class.hidden]=\"mobileQuery\"\n       class=\"px-gutter flex-none flex items-center\">\n    <vex-navigation-item *ngFor=\"let item of navigationItems\" [item]=\"item\"></vex-navigation-item>\n  </div>\n\n  <span class=\"flex-1\"></span>\n\n  <div class=\"-mx-1 flex items-center\">\n    <!--<div class=\"px-1\">\n      <button (click)=\"openSearch()\" mat-icon-button type=\"button\">\n        <mat-icon color=\"primary\" svgIcon=\"mat:search\"></mat-icon>\n      </button>\n    </div>\n\n    <div class=\"px-1\">\n      <vex-toolbar-notifications></vex-toolbar-notifications>\n    </div>-->\n\n    <!--<div class=\"px-1\">\n      <button (click)=\"openQuickpanel()\" mat-icon-button type=\"button\">\n        <mat-icon color=\"primary\" svgIcon=\"mat:bookmarks\"></mat-icon>\n      </button>\n    </div>\n\n    <div class=\"px-1\">\n      <button [matMenuTriggerFor]=\"languageMenu\" mat-icon-button type=\"button\">\n        <mat-icon svgIcon=\"flag:united-states\"></mat-icon>\n      </button>\n    </div>-->\n\n    <div *ngIf=\"userVisible$ | async\" class=\"px-1\">\n      <vex-toolbar-user></vex-toolbar-user>\n    </div>\n\n    <mat-menu #languageMenu=\"matMenu\" overlapTrigger=\"false\" xPosition=\"before\" yPosition=\"below\">\n      <button mat-menu-item>\n        <mat-icon svgIcon=\"flag:united-states\"></mat-icon>\n        <span>English</span>\n      </button>\n\n      <button mat-menu-item>\n        <mat-icon svgIcon=\"flag:germany\"></mat-icon>\n        <span>German</span>\n      </button>\n    </mat-menu>\n  </div>\n</div>\n\n<vex-navigation *ngIf=\"(isVerticalLayout$ | async) && isNavbarBelowToolbar$ | async\"\n                [class.hidden]=\"mobileQuery\"></vex-navigation>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}