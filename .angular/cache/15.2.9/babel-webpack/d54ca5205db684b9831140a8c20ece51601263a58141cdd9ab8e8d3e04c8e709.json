{"ast":null,"code":"export function checkRouterChildsData(route, compareWith) {\n  if (compareWith(route.data)) {\n    return true;\n  }\n  if (!route.firstChild) {\n    return false;\n  }\n  return checkRouterChildsData(route.firstChild, compareWith);\n}\n/**\r\n * Used to get params from children in their parent\r\n */\nexport function getAllParams(route, result = new Map()) {\n  if (route.params) {\n    for (const key of Object.keys(route.params)) {\n      result.set(key, route.params[key]);\n    }\n  }\n  if (!route.firstChild) {\n    return result;\n  }\n  return getAllParams(route.firstChild, result);\n}","map":{"version":3,"mappings":"AAGA,OAAM,SAAUA,qBAAqB,CAACC,KAAuD,EAAEC,WAA4C;EACzI,IAAIA,WAAW,CAACD,KAAK,CAACE,IAAI,CAAC,EAAE;IAC3B,OAAO,IAAI;;EAGb,IAAI,CAACF,KAAK,CAACG,UAAU,EAAE;IACrB,OAAO,KAAK;;EAGd,OAAOJ,qBAAqB,CAACC,KAAK,CAACG,UAAU,EAAEF,WAAW,CAAC;AAC7D;AAEA;;;AAGA,OAAM,SAAUG,YAAY,CAACJ,KAAuD,EAAEK,SAAS,IAAIC,GAAG,EAAkB;EACtH,IAAIN,KAAK,CAACO,MAAM,EAAE;IAChB,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACV,KAAK,CAACO,MAAM,CAAC,EAAE;MAC3CF,MAAM,CAACM,GAAG,CAACH,GAAG,EAAER,KAAK,CAACO,MAAM,CAACC,GAAG,CAAC,CAAC;;;EAItC,IAAI,CAACR,KAAK,CAACG,UAAU,EAAE;IACrB,OAAOE,MAAM;;EAGf,OAAOD,YAAY,CAACJ,KAAK,CAACG,UAAU,EAAEE,MAAM,CAAC;AAC/C","names":["checkRouterChildsData","route","compareWith","data","firstChild","getAllParams","result","Map","params","key","Object","keys","set"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\@vex\\utils\\check-router-childs-data.ts"],"sourcesContent":["import { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { VexRouteData } from '../interfaces/vex-route.interface';\r\n\r\nexport function checkRouterChildsData(route: ActivatedRouteSnapshot & { data?: VexRouteData }, compareWith: (data: VexRouteData) => boolean) {\r\n  if (compareWith(route.data)) {\r\n    return true;\r\n  }\r\n\r\n  if (!route.firstChild) {\r\n    return false;\r\n  }\r\n\r\n  return checkRouterChildsData(route.firstChild, compareWith);\r\n}\r\n\r\n/**\r\n * Used to get params from children in their parent\r\n */\r\nexport function getAllParams(route: ActivatedRouteSnapshot & { data?: VexRouteData }, result = new Map<string, string>()): Map<string, string> {\r\n  if (route.params) {\r\n    for (const key of Object.keys(route.params)) {\r\n      result.set(key, route.params[key]);\r\n    }\r\n  }\r\n\r\n  if (!route.firstChild) {\r\n    return result;\r\n  }\r\n\r\n  return getAllParams(route.firstChild, result);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}