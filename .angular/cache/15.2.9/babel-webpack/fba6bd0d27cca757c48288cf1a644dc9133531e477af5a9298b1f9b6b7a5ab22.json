{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/el-sotano-backoffice/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { fadeInUp400ms } from 'src/@vex/animations/fade-in-up.animation';\nimport { stagger20ms } from 'src/@vex/animations/stagger.animation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/service/crudService\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"../../../../@vex/components/secondary-toolbar/secondary-toolbar.component\";\nimport * as i10 from \"../../../../@vex/components/breadcrumbs/breadcrumbs.component\";\nimport * as i11 from \"@angular/material/slide-toggle\";\nfunction OptionsCreateUpdateComponent_mat_hint_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 16);\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"Opciones\", \"Gesti\\u00F3n de Opciones de carta\"];\n};\nexport class OptionsCreateUpdateComponent {\n  constructor(fb, crudService, route, router) {\n    this.fb = fb;\n    this.crudService = crudService;\n    this.route = route;\n    this.router = router;\n    this.langId = null;\n    this.mode = null;\n    this.thumbnail = false;\n    this.form = this.fb.group({\n      title: ['', Validators.required],\n      thumbnail: [false, Validators.required]\n    });\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // if you are editing an existing lang, set langId\n      // and load the lang details using getLangById()\n      _this.langId = _this.route.snapshot.paramMap.get('id');\n      if (_this.langId !== null) {\n        _this.mode = 'update';\n        const langData = yield _this.crudService.get(_this.langId, 'options');\n        if (langData) {\n          _this.form.patchValue({\n            title: langData.title,\n            thumbnail: langData.thumbnail\n          });\n        }\n      } else {\n        _this.defaults = {};\n      }\n    })();\n  }\n  save() {\n    if (this.langId) {\n      this.crudService.update(this.langId, this.form.value, 'options', 'option');\n    } else {\n      this.crudService.create(this.form.value, 'options', 'option');\n    }\n  }\n  // Custom Validator\n  lengthValidator(control) {\n    const value = control.value;\n    const regex = /^[a-zA-Z]{2,5}$/;\n    return regex.test(value) ? null : {\n      length: true\n    };\n  }\n  cancel() {\n    this.router.navigate(['/option']); // Navigating to /language on cancel\n  }\n}\n\nOptionsCreateUpdateComponent.ɵfac = function OptionsCreateUpdateComponent_Factory(t) {\n  return new (t || OptionsCreateUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CrudService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nOptionsCreateUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OptionsCreateUpdateComponent,\n  selectors: [[\"vex-options-create-update\"]],\n  decls: 26,\n  vars: 7,\n  consts: [[\"current\", \"Opciones\"], [1, \"flex-auto\", 3, \"crumbs\"], [\"color\", \"primary\", \"mat-icon-button\", \"\", \"type\", \"button\", 1, \"ml-2\"], [\"svgIcon\", \"mat:more_vert\"], [1, \"p-gutter\", \"container\"], [1, \"flex\", \"flex-col\", \"sm:flex-row\", \"gap-4\"], [1, \"card\", \"flex-auto\"], [1, \"px-6\", \"py-4\", \"border-b\", \"flex\", \"items-center\"], [1, \"title\", \"m-0\"], [1, \"px-6\", \"py-4\", \"flex\", \"flex-col\", 3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"required\", \"\"], [\"class\", \"mat-small\", 4, \"ngIf\"], [2, \"flex\", \"1\", 3, \"ngModel\", \"ngModelChange\"], [1, \"flex\", \"items-center\", \"justify-end\", \"gap-2\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"mat-small\"]],\n  template: function OptionsCreateUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"vex-secondary-toolbar\", 0);\n      i0.ɵɵelement(1, \"vex-breadcrumbs\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵelement(3, \"mat-icon\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"h2\", 8);\n      i0.ɵɵtext(9, \"Gestor de opciones de carta\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 9)(11, \"mat-form-field\")(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵtemplate(15, OptionsCreateUpdateComponent_mat_hint_15_Template, 2, 0, \"mat-hint\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"\\u00BFCon imagen de miniatura?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"mat-slide-toggle\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function OptionsCreateUpdateComponent_Template_mat_slide_toggle_ngModelChange_20_listener($event) {\n        return ctx.thumbnail = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 13)(22, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function OptionsCreateUpdateComponent_Template_button_click_22_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(23, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function OptionsCreateUpdateComponent_Template_button_click_24_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(25, \"Guardar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"crumbs\", i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"@stagger\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"@fadeInUp\", undefined);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"title\").invalid && ctx.form.get(\"title\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.thumbnail);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i4.NgIf, i1.FormGroupDirective, i1.FormControlName, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatHint, i7.MatButton, i7.MatIconButton, i8.MatIcon, i9.SecondaryToolbarComponent, i10.BreadcrumbsComponent, i11.MatSlideToggle],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  data: {\n    animation: [stagger20ms, fadeInUp400ms]\n  }\n});","map":{"version":3,"mappings":"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","names":["Validators","fadeInUp400ms","stagger20ms","i0","OptionsCreateUpdateComponent","constructor","fb","crudService","route","router","form","group","title","required","thumbnail","ngOnInit","langId","snapshot","paramMap","get","mode","langData","patchValue","defaults","save","update","value","create","lengthValidator","control","regex","test","length","cancel","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\app\\pages\\options\\options-create-update\\options-create-update.component.ts","D:\\Projects\\el-sotano-backoffice\\src\\app\\pages\\options\\options-create-update\\options-create-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { fadeInUp400ms } from 'src/@vex/animations/fade-in-up.animation';\nimport { stagger20ms } from 'src/@vex/animations/stagger.animation';\nimport { CrudService } from 'src/service/crudService';\n\n@Component({\n  selector: 'vex-options-create-update',\n  templateUrl: './options-create-update.component.html',\n  styleUrls: ['./options-create-update.component.scss'],\n  animations:[stagger20ms, fadeInUp400ms]\n})\nexport class OptionsCreateUpdateComponent {\n  form: FormGroup;\n  langId: string | null = null;\n  mode: string | null = null;\n  defaults: any;\n  thumbnail: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private crudService: CrudService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.form = this.fb.group({\n      title: ['', Validators.required],\n      thumbnail: [false, Validators.required]\n    });\n  }\n\n  async ngOnInit() {\n    // if you are editing an existing lang, set langId\n    // and load the lang details using getLangById()\n    this.langId = this.route.snapshot.paramMap.get('id');\n    if (this.langId !== null) {\n      this.mode = 'update';\n      const langData = await this.crudService.get(this.langId, 'options');\n      if (langData) {\n        this.form.patchValue({\n          title: langData.title,\n          thumbnail: langData.thumbnail\n        });\n      }\n    } else {\n      this.defaults = {} as any;\n\n    }\n  }\n\n  save() {\n    if (this.langId) {\n      this.crudService.update(this.langId, this.form.value, 'options', 'option');\n    } else {\n      this.crudService.create(this.form.value, 'options', 'option');\n    }\n  }\n\n  // Custom Validator\n  lengthValidator(control: AbstractControl) {\n    const value = control.value;\n    const regex = /^[a-zA-Z]{2,5}$/;\n    return regex.test(value) ? null : { length: true };\n  }\n\n  cancel() {\n    this.router.navigate(['/option']); // Navigating to /language on cancel\n  }\n}\n","<vex-secondary-toolbar current=\"Opciones\">\n  <vex-breadcrumbs [crumbs]=\"['Opciones', 'Gestión de Opciones de carta']\" class=\"flex-auto\"></vex-breadcrumbs>\n\n  <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\n    <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\n  </button>\n</vex-secondary-toolbar>\n\n<div [@stagger]=\"true\" class=\"p-gutter container\">\n\n  <div class=\"flex flex-col sm:flex-row gap-4\">\n    <div @fadeInUp class=\"card flex-auto\">\n      <div class=\"px-6 py-4 border-b flex items-center\">\n        <h2 class=\"title m-0\">Gestor de opciones de carta</h2>\n      </div>\n\n      <div class=\"px-6 py-4 flex flex-col\" [formGroup]=\"form\">\n        <mat-form-field>\n          <mat-label>Nombre</mat-label>\n          <input matInput formControlName=\"title\" required>\n          <mat-hint class=\"mat-small\" *ngIf=\"form.get('title').invalid && form.get('title').touched\">\n            Este campo es obligatorio\n          </mat-hint>\n        </mat-form-field>\n        <div>\n          <mat-label>¿Con imagen de miniatura?</mat-label><br>\n          <mat-slide-toggle style=\"flex: 1;\" [(ngModel)]=\"thumbnail\"></mat-slide-toggle>\n\n        </div>\n\n        <div class=\"flex items-center justify-end gap-2\">\n          <button mat-button type=\"button\" (click)=\"cancel()\">Cancel</button> <!-- Added (click) event here -->\n          <button color=\"primary\" mat-raised-button type=\"button\" (click)=\"save()\">Guardar</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}