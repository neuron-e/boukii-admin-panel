{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class NavigationService {\n  constructor() {\n    this.items = [];\n    this._openChangeSubject = new Subject();\n    this.openChange$ = this._openChangeSubject.asObservable();\n  }\n  triggerOpenChange(item) {\n    this._openChangeSubject.next(item);\n  }\n  isLink(item) {\n    return item.type === 'link';\n  }\n  isDropdown(item) {\n    return item.type === 'dropdown';\n  }\n  isSubheading(item) {\n    return item.type === 'subheading';\n  }\n}\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)();\n};\nNavigationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,iBAAiB;EAO5BC;IALA,UAAK,GAAqB,EAAE;IAEpB,uBAAkB,GAAG,IAAIF,OAAO,EAAsB;IAC9D,gBAAW,GAAG,IAAI,CAACG,kBAAkB,CAACC,YAAY,EAAE;EAErC;EAEfC,iBAAiB,CAACC,IAAwB;IACxC,IAAI,CAACH,kBAAkB,CAACI,IAAI,CAACD,IAAI,CAAC;EACpC;EAEAE,MAAM,CAACF,IAAoB;IACzB,OAAOA,IAAI,CAACG,IAAI,KAAK,MAAM;EAC7B;EAEAC,UAAU,CAACJ,IAAoB;IAC7B,OAAOA,IAAI,CAACG,IAAI,KAAK,UAAU;EACjC;EAEAE,YAAY,CAACL,IAAoB;IAC/B,OAAOA,IAAI,CAACG,IAAI,KAAK,YAAY;EACnC;;AAvBWR,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAW,SAAjBX,iBAAiB;EAAAY,YAFhB;AAAM","names":["Subject","NavigationService","constructor","_openChangeSubject","asObservable","triggerOpenChange","item","next","isLink","type","isDropdown","isSubheading","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\@vex\\services\\navigation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NavigationDropdown, NavigationItem, NavigationLink, NavigationSubheading } from '../interfaces/navigation-item.interface';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NavigationService {\r\n\r\n  items: NavigationItem[] = [];\r\n\r\n  private _openChangeSubject = new Subject<NavigationDropdown>();\r\n  openChange$ = this._openChangeSubject.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  triggerOpenChange(item: NavigationDropdown) {\r\n    this._openChangeSubject.next(item);\r\n  }\r\n\r\n  isLink(item: NavigationItem): item is NavigationLink {\r\n    return item.type === 'link';\r\n  }\r\n\r\n  isDropdown(item: NavigationItem): item is NavigationDropdown {\r\n    return item.type === 'dropdown';\r\n  }\r\n\r\n  isSubheading(item: NavigationItem): item is NavigationSubheading {\r\n    return item.type === 'subheading';\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}