{"ast":null,"code":"/**\r\n * Performs a deep merge of `source` into `target`.\r\n * Mutates `target` only but not its objects and arrays.\r\n *\r\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\r\n */\nexport function mergeDeep(target, source) {\n  const isObject = obj => obj && typeof obj === 'object';\n  if (!isObject(target) || !isObject(source)) {\n    return source;\n  }\n  Object.keys(source).forEach(key => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = targetValue.concat(sourceValue);\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n  return target;\n}","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,OAAM,SAAUA,SAAS,CAAOC,MAAS,EAAEC,MAAS;EAClD,MAAMC,QAAQ,GAAIC,GAAG,IAAKA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ;EAExD,IAAI,CAACD,QAAQ,CAACF,MAAM,CAAC,IAAI,CAACE,QAAQ,CAACD,MAAM,CAAC,EAAE;IAC1C,OAAOA,MAAe;;EAGxBG,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAACC,GAAG,IAAG;IAChC,MAAMC,WAAW,GAAGR,MAAM,CAACO,GAAG,CAAC;IAC/B,MAAME,WAAW,GAAGR,MAAM,CAACM,GAAG,CAAC;IAE/B,IAAIG,KAAK,CAACC,OAAO,CAACH,WAAW,CAAC,IAAIE,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;MAC5DT,MAAM,CAACO,GAAG,CAAC,GAAGC,WAAW,CAACI,MAAM,CAACH,WAAW,CAAC;KAC9C,MAAM,IAAIP,QAAQ,CAACM,WAAW,CAAC,IAAIN,QAAQ,CAACO,WAAW,CAAC,EAAE;MACzDT,MAAM,CAACO,GAAG,CAAC,GAAGR,SAAS,CAACK,MAAM,CAACS,MAAM,CAAC,EAAE,EAAEL,WAAW,CAAC,EAAEC,WAAW,CAAC;KACrE,MAAM;MACLT,MAAM,CAACO,GAAG,CAAC,GAAGE,WAAW;;EAE7B,CAAC,CAAC;EAEF,OAAOT,MAAe;AACxB","names":["mergeDeep","target","source","isObject","obj","Object","keys","forEach","key","targetValue","sourceValue","Array","isArray","concat","assign"],"sourceRoot":"","sources":["D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\utils\\merge-deep.ts"],"sourcesContent":["/**\n * Performs a deep merge of `source` into `target`.\n * Mutates `target` only but not its objects and arrays.\n *\n * @author inspired by [jhildenbiddle](https://stackoverflow.com/a/48218209).\n */\nexport function mergeDeep<T, P>(target: T, source: P): T & P {\n  const isObject = (obj) => obj && typeof obj === 'object';\n\n  if (!isObject(target) || !isObject(source)) {\n    return source as T & P;\n  }\n\n  Object.keys(source).forEach(key => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = targetValue.concat(sourceValue);\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return target as T & P;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}