{"ast":null,"code":"import { delayWhen, interval, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-loading-bar/core\";\nimport * as i2 from \"@angular/material/progress-bar\";\nimport * as i3 from \"@angular/common\";\nexport class ProgressBarComponent {\n  constructor(loader) {\n    this.loader = loader;\n    this.value$ = this.loader.useRef('router').value$.pipe(delayWhen(value => value === 0 ? interval(200) : of(undefined)));\n  }\n  ngOnInit() {}\n}\nProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {\n  return new (t || ProgressBarComponent)(i0.ɵɵdirectiveInject(i1.LoadingBarService));\n};\nProgressBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProgressBarComponent,\n  selectors: [[\"vex-progress-bar\"]],\n  decls: 4,\n  vars: 9,\n  consts: [[\"mode\", \"determinate\", 1, \"progress-bar\", 3, \"value\"]],\n  template: function ProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"mat-progress-bar\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵpipe(3, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"visible\", i0.ɵɵpipeBind1(1, 3, ctx.value$) > 0 && i0.ɵɵpipeBind1(2, 5, ctx.value$) !== 100);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind1(3, 7, ctx.value$));\n    }\n  },\n  dependencies: [i2.MatProgressBar, i3.AsyncPipe],\n  styles: [\".progress-bar[_ngcontent-%COMP%] {\\n  left: 0;\\n  opacity: 0;\\n  position: fixed;\\n  right: 0;\\n  top: 0;\\n  visibility: hidden;\\n  z-index: 99999;\\n  transition: opacity 500ms var(--trans-ease-out-timing-function) 200ms, visibility 0ms var(--trans-ease-out-timing-function) 700ms;\\n}\\n.progress-bar.visible[_ngcontent-%COMP%] {\\n  opacity: 1;\\n  visibility: visible;\\n  transition: opacity 500ms var(--trans-ease-out-timing-function), visibility 0ms var(--trans-ease-out-timing-function) 0ms;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9AdmV4L2NvbXBvbmVudHMvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNFLE9BQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtFQUNBLFFBQUE7RUFDQSxNQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0EsaUlBQUE7QUFIRjtBQUtFO0VBQ0UsVUFBQTtFQUNBLG1CQUFBO0VBQ0EseUhBQUE7QUFISiIsInNvdXJjZXNDb250ZW50IjpbIiR0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcclxuJHRyYW5zaXRpb24tZGVsYXk6IDIwMG1zO1xyXG4kdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IHZhcigtLXRyYW5zLWVhc2Utb3V0LXRpbWluZy1mdW5jdGlvbik7XHJcblxyXG4ucHJvZ3Jlc3MtYmFyIHtcclxuICBsZWZ0OiAwO1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHRvcDogMDtcclxuICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgei1pbmRleDogOTk5OTk7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAkdHJhbnNpdGlvbi1kdXJhdGlvbiAkdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24gJHRyYW5zaXRpb24tZGVsYXksIHZpc2liaWxpdHkgMG1zICR0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbiAoJHRyYW5zaXRpb24tZHVyYXRpb24gKyAkdHJhbnNpdGlvbi1kZWxheSk7XHJcblxyXG4gICYudmlzaWJsZSB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgJHRyYW5zaXRpb24tZHVyYXRpb24gJHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uLCB2aXNpYmlsaXR5IDBtcyAkdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24gMG1zO1xyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,QAAQ,EAAcC,EAAE,QAAQ,MAAM;;;;;AAO1D,OAAM,MAAOC,oBAAoB;EAM/BC,YAAmBC,MAAyB;IAAzB,WAAM,GAANA,MAAM;IAJzB,WAAM,GAAuB,IAAI,CAACA,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC,CAACC,MAAM,CAACC,IAAI,CACnER,SAAS,CAACS,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGR,QAAQ,CAAC,GAAG,CAAC,GAAGC,EAAE,CAACQ,SAAS,CAAC,CAAC,CAChE;EAE+C;EAEhDC,QAAQ,IACR;;AATWR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTjCC,sCAGwD;;;;;;MAHtCA,2GAAkE;MAClEA,wDAAwB","names":["delayWhen","interval","of","ProgressBarComponent","constructor","loader","useRef","value$","pipe","value","undefined","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\@vex\\components\\progress-bar\\progress-bar.component.ts","D:\\Projects\\el-sotano-backoffice\\src\\@vex\\components\\progress-bar\\progress-bar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoadingBarService } from '@ngx-loading-bar/core';\nimport { delayWhen, interval, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'vex-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  value$: Observable<number> = this.loader.useRef('router').value$.pipe(\n    delayWhen(value => value === 0 ? interval(200) : of(undefined))\n  );\n\n  constructor(public loader: LoadingBarService) { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-progress-bar [class.visible]=\"(value$ | async) > 0 && (value$ | async) !== 100\"\n                  [value]=\"value$ | async\"\n                  class=\"progress-bar\"\n                  mode=\"determinate\"></mat-progress-bar>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}