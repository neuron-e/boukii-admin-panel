{"ast":null,"code":"import { ToolbarUserDropdownComponent } from './toolbar-user-dropdown/toolbar-user-dropdown.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../components/popover/popover.service\";\nimport * as i2 from \"@angular/material/icon\";\nimport * as i3 from \"@angular/material/core\";\nexport class ToolbarUserComponent {\n  constructor(popover, cd) {\n    this.popover = popover;\n    this.cd = cd;\n  }\n  ngOnInit() {}\n  showPopover(originRef) {\n    this.dropdownOpen = true;\n    this.cd.markForCheck();\n    const popoverRef = this.popover.open({\n      content: ToolbarUserDropdownComponent,\n      origin: originRef,\n      offsetY: 12,\n      position: [{\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }]\n    });\n    popoverRef.afterClosed$.subscribe(() => {\n      this.dropdownOpen = false;\n      this.cd.markForCheck();\n    });\n  }\n}\nToolbarUserComponent.ɵfac = function ToolbarUserComponent_Factory(t) {\n  return new (t || ToolbarUserComponent)(i0.ɵɵdirectiveInject(i1.PopoverService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nToolbarUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ToolbarUserComponent,\n  selectors: [[\"vex-toolbar-user\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"matRipple\", \"\", 1, \"flex\", \"items-center\", \"rounded\", \"cursor-pointer\", \"relative\", \"trans-ease-out\", \"select-none\", \"py-1\", \"pr-1\", \"pl-3\", \"hover:bg-hover\", 3, \"click\"], [\"originRef\", \"\"], [1, \"body-1\", \"font-medium\", \"leading-snug\", \"ltr:mr-3\", \"rtl:ml-3\", \"hidden\", \"sm:block\"], [1, \"rounded-full\", \"h-9\", \"w-9\", \"flex\", \"items-center\", \"justify-center\", \"text-primary\", \"bg-primary/10\"], [\"svgIcon\", \"mat:person\"]],\n  template: function ToolbarUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function ToolbarUserComponent_Template_div_click_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.showPopover(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtext(3, \"David Smith\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelement(5, \"mat-icon\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"bg-hover\", ctx.dropdownOpen);\n    }\n  },\n  dependencies: [i2.MatIcon, i3.MatRipple],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAEA,SAASA,4BAA4B,QAAQ,yDAAyD;;;;;AAOtG,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,OAAuB,EACvBC,EAAqB;IADrB,YAAO,GAAPD,OAAO;IACP,OAAE,GAAFC,EAAE;EAAuB;EAE7CC,QAAQ,IACR;EAEAC,WAAW,CAACC,SAAsB;IAChC,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACJ,EAAE,CAACK,YAAY,EAAE;IAEtB,MAAMC,UAAU,GAAG,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC;MACnCC,OAAO,EAAEZ,4BAA4B;MACrCa,MAAM,EAAEN,SAAS;MACjBO,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,CACR;QACEC,OAAO,EAAE,QAAQ;QACjBC,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,QAAQ;QAClBC,QAAQ,EAAE;OACX,EACD;QACEH,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,QAAQ;QACjBC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE;OACX;KAEJ,CAAC;IAEFT,UAAU,CAACU,YAAY,CAACC,SAAS,CAAC,MAAK;MACrC,IAAI,CAACb,YAAY,GAAG,KAAK;MACzB,IAAI,CAACJ,EAAE,CAACK,YAAY,EAAE;IACxB,CAAC,CAAC;EACJ;;AAtCWR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCTjCC,iCAIe;MAHVA;QAAAA;QAAA;QAAA,OAASA,mCAAsB;MAAA,EAAC;MAInCA,8BAA+E;MAAAA,2BAAW;MAAAA,iBAAM;MAChGA,8BAA8F;MAC5FA,8BAA0C;MAC5CA,iBAAM;;;MANHA,4CAA+B","names":["ToolbarUserDropdownComponent","ToolbarUserComponent","constructor","popover","cd","ngOnInit","showPopover","originRef","dropdownOpen","markForCheck","popoverRef","open","content","origin","offsetY","position","originX","originY","overlayX","overlayY","afterClosed$","subscribe","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\layout\\toolbar\\toolbar-user\\toolbar-user.component.ts","D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\layout\\toolbar\\toolbar-user\\toolbar-user.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { PopoverService } from '../../../components/popover/popover.service';\nimport { ToolbarUserDropdownComponent } from './toolbar-user-dropdown/toolbar-user-dropdown.component';\n\n@Component({\n  selector: 'vex-toolbar-user',\n  templateUrl: './toolbar-user.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarUserComponent implements OnInit {\n\n  dropdownOpen: boolean;\n\n  constructor(private popover: PopoverService,\n              private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n  }\n\n  showPopover(originRef: HTMLElement) {\n    this.dropdownOpen = true;\n    this.cd.markForCheck();\n\n    const popoverRef = this.popover.open({\n      content: ToolbarUserDropdownComponent,\n      origin: originRef,\n      offsetY: 12,\n      position: [\n        {\n          originX: 'center',\n          originY: 'top',\n          overlayX: 'center',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top',\n        },\n      ]\n    });\n\n    popoverRef.afterClosed$.subscribe(() => {\n      this.dropdownOpen = false;\n      this.cd.markForCheck();\n    });\n  }\n}\n","<div #originRef\n     (click)=\"showPopover(originRef)\"\n     [class.bg-hover]=\"dropdownOpen\"\n     class=\"flex items-center rounded cursor-pointer relative trans-ease-out select-none py-1 pr-1 pl-3 hover:bg-hover\"\n     matRipple>\n  <div class=\"body-1 font-medium leading-snug ltr:mr-3 rtl:ml-3 hidden sm:block\">David Smith</div>\n  <div class=\"rounded-full h-9 w-9 flex items-center justify-center text-primary bg-primary/10\">\n    <mat-icon svgIcon=\"mat:person\"></mat-icon>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}