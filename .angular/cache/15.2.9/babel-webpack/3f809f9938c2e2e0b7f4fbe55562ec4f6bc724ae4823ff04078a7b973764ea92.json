{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { mergeDeep } from '../utils/merge-deep';\nimport { configs } from './configs';\nimport { VexConfigName } from './config-name.model';\nimport { ColorSchemeName } from './colorSchemeName';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/layout.service\";\nexport class ConfigService {\n  constructor(document, layoutService) {\n    this.document = document;\n    this.layoutService = layoutService;\n    this.defaultConfig = VexConfigName.poseidon;\n    this.configs = configs;\n    this._configSubject = new BehaviorSubject(this.configs.find(c => c.id === this.defaultConfig));\n    this.config$ = this._configSubject.asObservable();\n    this.config$.subscribe(config => this._updateConfig(config));\n  }\n  select(selector) {\n    return this.config$.pipe(map(selector));\n  }\n  setConfig(config) {\n    const settings = this.configs.find(c => c.id === config);\n    this._configSubject.next(settings);\n  }\n  updateConfig(config) {\n    this._configSubject.next(mergeDeep({\n      ...this._configSubject.getValue()\n    }, config));\n  }\n  _updateConfig(config) {\n    this._setLayoutClass(config.id);\n    this._setStyle(config.style);\n    this._setDirection(config.direction);\n    this._setSidenavState(config.sidenav.state);\n    this._emitResize();\n  }\n  _setStyle(style) {\n    /**\r\n     * Color Scheme\r\n     */\n    Object.values(ColorSchemeName).filter(s => s !== style.colorScheme).forEach(value => {\n      if (this.document.body.classList.contains(value)) {\n        this.document.body.classList.remove(value);\n      }\n    });\n    this.document.body.classList.add(style.colorScheme);\n    /**\r\n     * Border Radius\r\n     */\n    this.document.body.style.setProperty('--border-radius', `${style.borderRadius.value}${style.borderRadius.unit}`);\n    const buttonBorderRadius = style.button.borderRadius ?? style.borderRadius;\n    this.document.body.style.setProperty('--button-border-radius', `${buttonBorderRadius.value}${buttonBorderRadius.unit}`);\n    /**\r\n     * Primary Color\r\n     */\n    this.document.body.style.setProperty('--color-primary', style.colors.primary.default.replace('rgb(', '').replace(')', ''));\n    this.document.body.style.setProperty('--color-primary-rgb', style.colors.primary.default);\n    this.document.body.style.setProperty('--color-primary-contrast', style.colors.primary.contrast.replace('rgb(', '').replace(')', ''));\n    this.document.body.style.setProperty('--color-primary-contrast-rgb', style.colors.primary.contrast);\n  }\n  /**\r\n   * Emit event so charts and other external libraries know they have to resize on layout switch\r\n   * @private\r\n   */\n  _emitResize() {\n    if (window) {\n      window.dispatchEvent(new Event('resize'));\n      setTimeout(() => window.dispatchEvent(new Event('resize')), 200);\n    }\n  }\n  _setDirection(direction) {\n    this.document.body.dir = direction;\n  }\n  _setSidenavState(sidenavState) {\n    sidenavState === 'expanded' ? this.layoutService.expandSidenav() : this.layoutService.collapseSidenav();\n  }\n  _setLayoutClass(layout) {\n    this.configs.forEach(c => {\n      if (this.document.body.classList.contains(c.id)) {\n        this.document.body.classList.remove(c.id);\n      }\n    });\n    this.document.body.classList.add(layout);\n  }\n}\nConfigService.ɵfac = function ConfigService_Factory(t) {\n  return new (t || ConfigService)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.LayoutService));\n};\nConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigService,\n  factory: ConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","DOCUMENT","mergeDeep","configs","VexConfigName","ColorSchemeName","map","ConfigService","constructor","document","layoutService","poseidon","find","c","id","defaultConfig","_configSubject","asObservable","config$","subscribe","config","_updateConfig","select","selector","pipe","setConfig","settings","next","updateConfig","getValue","_setLayoutClass","_setStyle","style","_setDirection","direction","_setSidenavState","sidenav","state","_emitResize","Object","values","filter","s","colorScheme","forEach","value","body","classList","contains","remove","add","setProperty","borderRadius","unit","buttonBorderRadius","button","colors","primary","default","replace","contrast","window","dispatchEvent","Event","setTimeout","dir","sidenavState","expandSidenav","collapseSidenav","layout","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\@vex\\config\\config.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nimport { DeepPartial } from '../interfaces/deep-partial.type';\nimport { mergeDeep } from '../utils/merge-deep';\nimport { LayoutService } from '../services/layout.service';\nimport { configs } from './configs';\nimport { VexConfigName } from './config-name.model';\nimport { VexConfig } from './vex-config.interface';\nimport { ColorSchemeName } from './colorSchemeName';\nimport { CSSValue } from '../interfaces/css-value.type';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  defaultConfig: VexConfigName = VexConfigName.poseidon;\n  configs: VexConfig[] = configs;\n\n  private _configSubject = new BehaviorSubject(this.configs.find(c => c.id === this.defaultConfig));\n  config$ = this._configSubject.asObservable();\n\n  constructor(@Inject(DOCUMENT) private document: Document,\n              private layoutService: LayoutService) {\n    this.config$.subscribe(config => this._updateConfig(config));\n  }\n\n  select<R>(selector: (config: VexConfig) => R): Observable<R> {\n    return this.config$.pipe(\n      map(selector)\n    );\n  }\n\n  setConfig(config: VexConfigName) {\n    const settings = this.configs.find(c => c.id === config);\n    this._configSubject.next(settings);\n  }\n\n  updateConfig(config: DeepPartial<VexConfig>) {\n    this._configSubject.next(mergeDeep({ ...this._configSubject.getValue() }, config));\n  }\n\n  private _updateConfig(config: VexConfig): void {\n    this._setLayoutClass(config.id);\n    this._setStyle(config.style);\n    this._setDirection(config.direction);\n    this._setSidenavState(config.sidenav.state);\n    this._emitResize();\n  }\n\n  private _setStyle(style: VexConfig['style']): void {\n    /**\n     * Color Scheme\n     */\n    Object.values(ColorSchemeName).filter(s => s !== style.colorScheme).forEach(value => {\n      if (this.document.body.classList.contains(value)) {\n        this.document.body.classList.remove(value);\n      }\n    });\n\n    this.document.body.classList.add(style.colorScheme);\n\n    /**\n     * Border Radius\n     */\n    this.document.body.style.setProperty('--border-radius', `${style.borderRadius.value}${style.borderRadius.unit}`);\n\n    const buttonBorderRadius: CSSValue = style.button.borderRadius ?? style.borderRadius;\n    this.document.body.style.setProperty('--button-border-radius', `${buttonBorderRadius.value}${buttonBorderRadius.unit}`);\n\n    /**\n     * Primary Color\n     */\n    this.document.body.style.setProperty('--color-primary', style.colors.primary.default.replace('rgb(', '').replace(')', ''));\n    this.document.body.style.setProperty('--color-primary-rgb', style.colors.primary.default);\n    this.document.body.style.setProperty('--color-primary-contrast', style.colors.primary.contrast.replace('rgb(', '').replace(')', ''));\n    this.document.body.style.setProperty('--color-primary-contrast-rgb', style.colors.primary.contrast);\n  }\n\n  /**\n   * Emit event so charts and other external libraries know they have to resize on layout switch\n   * @private\n   */\n  private _emitResize(): void {\n    if (window) {\n      window.dispatchEvent(new Event('resize'));\n      setTimeout(() => window.dispatchEvent(new Event('resize')), 200);\n    }\n  }\n\n  private _setDirection(direction: 'ltr' | 'rtl') {\n    this.document.body.dir = direction;\n  }\n\n  private _setSidenavState(sidenavState: 'expanded' | 'collapsed'): void {\n    sidenavState === 'expanded' ? this.layoutService.expandSidenav() : this.layoutService.collapseSidenav();\n  }\n\n  private _setLayoutClass(layout: VexConfigName): void {\n    this.configs.forEach(c => {\n      if (this.document.body.classList.contains(c.id)) {\n        this.document.body.classList.remove(c.id);\n      }\n    });\n\n    this.document.body.classList.add(layout);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}