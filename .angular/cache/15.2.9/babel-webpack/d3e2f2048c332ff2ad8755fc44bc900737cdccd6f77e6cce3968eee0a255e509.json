{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/cdk/layout\";\nexport class LayoutService {\n  constructor(router, breakpointObserver) {\n    this.router = router;\n    this.breakpointObserver = breakpointObserver;\n    this._quickpanelOpenSubject = new BehaviorSubject(false);\n    this.quickpanelOpen$ = this._quickpanelOpenSubject.asObservable();\n    this._sidenavOpenSubject = new BehaviorSubject(false);\n    this.sidenavOpen$ = this._sidenavOpenSubject.asObservable();\n    this._sidenavCollapsedSubject = new BehaviorSubject(false);\n    this.sidenavCollapsed$ = this._sidenavCollapsedSubject.asObservable();\n    this._sidenavCollapsedOpenSubject = new BehaviorSubject(false);\n    this.sidenavCollapsedOpen$ = this._sidenavCollapsedOpenSubject.asObservable();\n    this._configpanelOpenSubject = new BehaviorSubject(false);\n    this.configpanelOpen$ = this._configpanelOpenSubject.asObservable();\n    this._searchOpen = new BehaviorSubject(false);\n    this.searchOpen$ = this._searchOpen.asObservable();\n    this.isDesktop$ = this.breakpointObserver.observe(`(min-width: 1280px)`).pipe(map(state => state.matches));\n    this.ltLg$ = this.breakpointObserver.observe(`(max-width: 1279px)`).pipe(map(state => state.matches));\n    this.gtMd$ = this.breakpointObserver.observe(`(min-width: 960px)`).pipe(map(state => state.matches));\n    this.ltMd$ = this.breakpointObserver.observe(`(max-width: 959px)`).pipe(map(state => state.matches));\n    this.gtSm$ = this.breakpointObserver.observe(`(min-width: 600px)`).pipe(map(state => state.matches));\n    this.isMobile$ = this.breakpointObserver.observe(`(max-width: 599px)`).pipe(map(state => state.matches));\n    this.isLtLg = () => this.breakpointObserver.isMatched(`(max-width: 1279px)`);\n    this.isMobile = () => this.breakpointObserver.isMatched(`(max-width: 599px)`);\n  }\n  openQuickpanel() {\n    this._quickpanelOpenSubject.next(true);\n  }\n  closeQuickpanel() {\n    this._quickpanelOpenSubject.next(false);\n  }\n  openSidenav() {\n    this._sidenavOpenSubject.next(true);\n  }\n  closeSidenav() {\n    this._sidenavOpenSubject.next(false);\n  }\n  collapseSidenav() {\n    this._sidenavCollapsedSubject.next(true);\n  }\n  expandSidenav() {\n    this._sidenavCollapsedSubject.next(false);\n  }\n  collapseOpenSidenav() {\n    this._sidenavCollapsedOpenSubject.next(true);\n  }\n  collapseCloseSidenav() {\n    this._sidenavCollapsedOpenSubject.next(false);\n  }\n  openConfigpanel() {\n    this._configpanelOpenSubject.next(true);\n  }\n  closeConfigpanel() {\n    this._configpanelOpenSubject.next(false);\n  }\n  openSearch() {\n    this._searchOpen.next(true);\n  }\n  closeSearch() {\n    this._searchOpen.next(false);\n  }\n}\nLayoutService.ɵfac = function LayoutService_Factory(t) {\n  return new (t || LayoutService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.BreakpointObserver));\n};\nLayoutService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LayoutService,\n  factory: LayoutService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AAEtC,SAASC,GAAG,QAAQ,gBAAgB;;;;AAMpC,OAAM,MAAOC,aAAa;EA2CxBC,YAAoBC,MAAc,EACdC,kBAAsC;IADtC,WAAM,GAAND,MAAM;IACN,uBAAkB,GAAlBC,kBAAkB;IA1C9B,2BAAsB,GAAG,IAAIL,eAAe,CAAU,KAAK,CAAC;IACpE,oBAAe,GAAG,IAAI,CAACM,sBAAsB,CAACC,YAAY,EAAE;IAEpD,wBAAmB,GAAG,IAAIP,eAAe,CAAU,KAAK,CAAC;IACjE,iBAAY,GAAG,IAAI,CAACQ,mBAAmB,CAACD,YAAY,EAAE;IAE9C,6BAAwB,GAAG,IAAIP,eAAe,CAAU,KAAK,CAAC;IACtE,sBAAiB,GAAG,IAAI,CAACS,wBAAwB,CAACF,YAAY,EAAE;IAExD,iCAA4B,GAAG,IAAIP,eAAe,CAAU,KAAK,CAAC;IAC1E,0BAAqB,GAAG,IAAI,CAACU,4BAA4B,CAACH,YAAY,EAAE;IAEhE,4BAAuB,GAAG,IAAIP,eAAe,CAAU,KAAK,CAAC;IACrE,qBAAgB,GAAG,IAAI,CAACW,uBAAuB,CAACJ,YAAY,EAAE;IAEtD,gBAAW,GAAG,IAAIP,eAAe,CAAU,KAAK,CAAC;IACzD,gBAAW,GAAG,IAAI,CAACY,WAAW,CAACL,YAAY,EAAE;IAE7C,eAAU,GAAG,IAAI,CAACF,kBAAkB,CAACQ,OAAO,CAAC,qBAAqB,CAAC,CAACC,IAAI,CACtEb,GAAG,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC5B;IACD,UAAK,GAAG,IAAI,CAACX,kBAAkB,CAACQ,OAAO,CAAC,qBAAqB,CAAC,CAACC,IAAI,CACjEb,GAAG,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC5B;IACD,UAAK,GAAG,IAAI,CAACX,kBAAkB,CAACQ,OAAO,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAChEb,GAAG,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC5B;IACD,UAAK,GAAG,IAAI,CAACX,kBAAkB,CAACQ,OAAO,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAChEb,GAAG,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC5B;IACD,UAAK,GAAG,IAAI,CAACX,kBAAkB,CAACQ,OAAO,CAAC,oBAAoB,CAAC,CAACC,IAAI,CAChEb,GAAG,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC5B;IACD,cAAS,GAAG,IAAI,CAACX,kBAAkB,CAACQ,OAAO,CAAC,oBAAoB,CAAC,CAACC,IAAI,CACpEb,GAAG,CAACc,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC,CAC5B;IAED,WAAM,GAAG,MAAM,IAAI,CAACX,kBAAkB,CAACY,SAAS,CAAC,qBAAqB,CAAC;IAEvE,aAAQ,GAAG,MAAM,IAAI,CAACZ,kBAAkB,CAACY,SAAS,CAAC,oBAAoB,CAAC;EAGV;EAE9DC,cAAc;IACZ,IAAI,CAACZ,sBAAsB,CAACa,IAAI,CAAC,IAAI,CAAC;EACxC;EAEAC,eAAe;IACb,IAAI,CAACd,sBAAsB,CAACa,IAAI,CAAC,KAAK,CAAC;EACzC;EAEAE,WAAW;IACT,IAAI,CAACb,mBAAmB,CAACW,IAAI,CAAC,IAAI,CAAC;EACrC;EAEAG,YAAY;IACV,IAAI,CAACd,mBAAmB,CAACW,IAAI,CAAC,KAAK,CAAC;EACtC;EAEAI,eAAe;IACb,IAAI,CAACd,wBAAwB,CAACU,IAAI,CAAC,IAAI,CAAC;EAC1C;EAEAK,aAAa;IACX,IAAI,CAACf,wBAAwB,CAACU,IAAI,CAAC,KAAK,CAAC;EAC3C;EAEAM,mBAAmB;IACjB,IAAI,CAACf,4BAA4B,CAACS,IAAI,CAAC,IAAI,CAAC;EAC9C;EAEAO,oBAAoB;IAClB,IAAI,CAAChB,4BAA4B,CAACS,IAAI,CAAC,KAAK,CAAC;EAC/C;EAEAQ,eAAe;IACb,IAAI,CAAChB,uBAAuB,CAACQ,IAAI,CAAC,IAAI,CAAC;EACzC;EAEAS,gBAAgB;IACd,IAAI,CAACjB,uBAAuB,CAACQ,IAAI,CAAC,KAAK,CAAC;EAC1C;EAEAU,UAAU;IACR,IAAI,CAACjB,WAAW,CAACO,IAAI,CAAC,IAAI,CAAC;EAC7B;EAEAW,WAAW;IACT,IAAI,CAAClB,WAAW,CAACO,IAAI,CAAC,KAAK,CAAC;EAC9B;;AA5FWjB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA6B,SAAb7B,aAAa;EAAA8B,YAFZ;AAAM","names":["BehaviorSubject","map","LayoutService","constructor","router","breakpointObserver","_quickpanelOpenSubject","asObservable","_sidenavOpenSubject","_sidenavCollapsedSubject","_sidenavCollapsedOpenSubject","_configpanelOpenSubject","_searchOpen","observe","pipe","state","matches","isMatched","openQuickpanel","next","closeQuickpanel","openSidenav","closeSidenav","collapseSidenav","expandSidenav","collapseOpenSidenav","collapseCloseSidenav","openConfigpanel","closeConfigpanel","openSearch","closeSearch","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\boukii\\boukii-admin-panel\\src\\@vex\\services\\layout.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\n\n  private _quickpanelOpenSubject = new BehaviorSubject<boolean>(false);\n  quickpanelOpen$ = this._quickpanelOpenSubject.asObservable();\n\n  private _sidenavOpenSubject = new BehaviorSubject<boolean>(false);\n  sidenavOpen$ = this._sidenavOpenSubject.asObservable();\n\n  private _sidenavCollapsedSubject = new BehaviorSubject<boolean>(false);\n  sidenavCollapsed$ = this._sidenavCollapsedSubject.asObservable();\n\n  private _sidenavCollapsedOpenSubject = new BehaviorSubject<boolean>(false);\n  sidenavCollapsedOpen$ = this._sidenavCollapsedOpenSubject.asObservable();\n\n  private _configpanelOpenSubject = new BehaviorSubject<boolean>(false);\n  configpanelOpen$ = this._configpanelOpenSubject.asObservable();\n\n  private _searchOpen = new BehaviorSubject<boolean>(false);\n  searchOpen$ = this._searchOpen.asObservable();\n\n  isDesktop$ = this.breakpointObserver.observe(`(min-width: 1280px)`).pipe(\n    map(state => state.matches)\n  );\n  ltLg$ = this.breakpointObserver.observe(`(max-width: 1279px)`).pipe(\n    map(state => state.matches)\n  );\n  gtMd$ = this.breakpointObserver.observe(`(min-width: 960px)`).pipe(\n    map(state => state.matches)\n  );\n  ltMd$ = this.breakpointObserver.observe(`(max-width: 959px)`).pipe(\n    map(state => state.matches)\n  );\n  gtSm$ = this.breakpointObserver.observe(`(min-width: 600px)`).pipe(\n    map(state => state.matches)\n  );\n  isMobile$ = this.breakpointObserver.observe(`(max-width: 599px)`).pipe(\n    map(state => state.matches)\n  );\n\n  isLtLg = () => this.breakpointObserver.isMatched(`(max-width: 1279px)`);\n\n  isMobile = () => this.breakpointObserver.isMatched(`(max-width: 599px)`);\n\n  constructor(private router: Router,\n              private breakpointObserver: BreakpointObserver) { }\n\n  openQuickpanel() {\n    this._quickpanelOpenSubject.next(true);\n  }\n\n  closeQuickpanel() {\n    this._quickpanelOpenSubject.next(false);\n  }\n\n  openSidenav() {\n    this._sidenavOpenSubject.next(true);\n  }\n\n  closeSidenav() {\n    this._sidenavOpenSubject.next(false);\n  }\n\n  collapseSidenav() {\n    this._sidenavCollapsedSubject.next(true);\n  }\n\n  expandSidenav() {\n    this._sidenavCollapsedSubject.next(false);\n  }\n\n  collapseOpenSidenav() {\n    this._sidenavCollapsedOpenSubject.next(true);\n  }\n\n  collapseCloseSidenav() {\n    this._sidenavCollapsedOpenSubject.next(false);\n  }\n\n  openConfigpanel() {\n    this._configpanelOpenSubject.next(true);\n  }\n\n  closeConfigpanel() {\n    this._configpanelOpenSubject.next(false);\n  }\n\n  openSearch() {\n    this._searchOpen.next(true);\n  }\n\n  closeSearch() {\n    this._searchOpen.next(false);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}