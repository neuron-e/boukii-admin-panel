{"ast":null,"code":"import { Subject } from 'rxjs';\nexport class PopoverRef {\n  constructor(overlay, content, data) {\n    this.overlay = overlay;\n    this.content = content;\n    this.data = data;\n    this.afterClosed = new Subject();\n    this.afterClosed$ = this.afterClosed.asObservable();\n    overlay.backdropClick().subscribe(() => {\n      this._close('backdropClick', null);\n    });\n  }\n  close(data) {\n    this._close('close', data);\n  }\n  _close(type, data) {\n    this.overlay.dispose();\n    this.afterClosed.next({\n      type,\n      data\n    });\n    this.afterClosed.complete();\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;AAU9B,OAAM,MAAOC,UAAU;EAIrBC,YAAmBC,OAAmB,EACnBC,OAAuB,EACvBC,IAAO;IAFP,YAAO,GAAPF,OAAO;IACP,YAAO,GAAPC,OAAO;IACP,SAAI,GAAJC,IAAI;IALf,gBAAW,GAAG,IAAIL,OAAO,EAAwB;IACzD,iBAAY,GAAG,IAAI,CAACM,WAAW,CAACC,YAAY,EAAE;IAK5CJ,OAAO,CAACK,aAAa,EAAE,CAACC,SAAS,CAAC,MAAK;MACrC,IAAI,CAACC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAC,KAAK,CAACN,IAAQ;IACZ,IAAI,CAACK,MAAM,CAAC,OAAO,EAAEL,IAAI,CAAC;EAC5B;EAEQK,MAAM,CAACE,IAA+B,EAAEP,IAAQ;IACtD,IAAI,CAACF,OAAO,CAACU,OAAO,EAAE;IACtB,IAAI,CAACP,WAAW,CAACQ,IAAI,CAAC;MACpBF,IAAI;MACJP;KACD,CAAC;IACF,IAAI,CAACC,WAAW,CAACS,QAAQ,EAAE;EAC7B","names":["Subject","PopoverRef","constructor","overlay","content","data","afterClosed","asObservable","backdropClick","subscribe","_close","close","type","dispose","next","complete"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\@vex\\components\\popover\\popover-ref.ts"],"sourcesContent":["import { OverlayRef } from '@angular/cdk/overlay';\r\nimport { Subject } from 'rxjs';\r\nimport { TemplateRef, Type } from '@angular/core';\r\n\r\nexport interface PopoverCloseEvent<T = any> {\r\n  type: 'backdropClick' | 'close';\r\n  data: T;\r\n}\r\n\r\nexport type PopoverContent = TemplateRef<any> | Type<any> | string | any;\r\n\r\nexport class PopoverRef<T = any> {\r\n  private afterClosed = new Subject<PopoverCloseEvent<T>>();\r\n  afterClosed$ = this.afterClosed.asObservable();\r\n\r\n  constructor(public overlay: OverlayRef,\r\n              public content: PopoverContent,\r\n              public data: T) {\r\n    overlay.backdropClick().subscribe(() => {\r\n      this._close('backdropClick', null);\r\n    });\r\n  }\r\n\r\n  close(data?: T) {\r\n    this._close('close', data);\r\n  }\r\n\r\n  private _close(type: PopoverCloseEvent['type'], data?: T) {\r\n    this.overlay.dispose();\r\n    this.afterClosed.next({\r\n      type,\r\n      data\r\n    });\r\n    this.afterClosed.complete();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}