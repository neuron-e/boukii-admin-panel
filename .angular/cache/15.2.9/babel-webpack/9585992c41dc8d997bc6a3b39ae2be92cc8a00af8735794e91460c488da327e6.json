{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/el-sotano-backoffice/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { fadeInUp400ms } from 'src/@vex/animations/fade-in-up.animation';\nimport { stagger20ms } from 'src/@vex/animations/stagger.animation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/service/userService\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"../../../../@vex/components/secondary-toolbar/secondary-toolbar.component\";\nimport * as i10 from \"../../../../@vex/components/breadcrumbs/breadcrumbs.component\";\nfunction UserCreateUpdateComponent_mat_hint_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 22);\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_hint_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 22);\n    i0.ɵɵtext(1, \" Este campo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Debe ser un correo v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La contrase\\u00F1a debe tener al menos 6 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_error_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La contrase\\u00F1a debe contener al menos una may\\u00FAscula, una min\\u00FAscula, un n\\u00FAmero y un car\\u00E1cter especial. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_error_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Este campo es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserCreateUpdateComponent_mat_error_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as deben coincidir. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"Usuarios\", \"Gesti\\u00F3n de Usuarios\"];\n};\nexport class UserCreateUpdateComponent {\n  constructor(fb, userService, route, router) {\n    this.fb = fb;\n    this.userService = userService;\n    this.route = route;\n    this.router = router;\n    this.userId = null;\n    this.mode = null;\n    this.hide = true;\n    this.userForm = this.fb.group({\n      name: ['', Validators.required],\n      surname: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), this.passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validator: this.checkPasswords\n    });\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // if you are editing an existing lang, set userId\n      // and load the lang details using getLangById()\n      _this.userId = _this.route.snapshot.paramMap.get('id');\n      if (_this.userId !== null) {\n        _this.mode = 'update';\n        const langData = yield _this.userService.getLangById(_this.userId);\n        if (langData) {\n          _this.userForm.patchValue({\n            name: langData.name,\n            surname: langData.surname,\n            email: langData.email\n          });\n        }\n      } else {\n        _this.defaults = {};\n      }\n    })();\n  }\n  passwordValidator(formControl) {\n    const {\n      value\n    } = formControl;\n    const hasUpperCase = /[A-Z]/.test(value);\n    const hasLowerCase = /[a-z]/.test(value);\n    const hasNumeric = /[0-9]/.test(value);\n    const hasSpecialChar = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(value);\n    if (hasUpperCase && hasLowerCase && hasNumeric && hasSpecialChar) {\n      return null;\n    } else {\n      return {\n        passwordStrength: true\n      };\n    }\n  }\n  checkPasswords(group) {\n    let pass = group.controls.password.value;\n    let confirmPass = group.controls.confirmPassword.value;\n    return pass === confirmPass ? null : {\n      notSame: true\n    };\n  }\n  save() {\n    this.userService.createUser(this.userForm.value);\n  }\n  // Custom Validator\n  lengthValidator(control) {\n    const value = control.value;\n    const regex = /^[a-zA-Z]{2,5}$/;\n    return regex.test(value) ? null : {\n      length: true\n    };\n  }\n  cancel() {\n    this.router.navigate(['/user']); // Navigating to /user on cancel\n  }\n}\n\nUserCreateUpdateComponent.ɵfac = function UserCreateUpdateComponent_Factory(t) {\n  return new (t || UserCreateUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nUserCreateUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserCreateUpdateComponent,\n  selectors: [[\"vex-user-create-update\"]],\n  decls: 49,\n  vars: 22,\n  consts: [[\"current\", \"Usuarios\"], [1, \"flex-auto\", 3, \"crumbs\"], [\"color\", \"primary\", \"mat-icon-button\", \"\", \"type\", \"button\", 1, \"ml-2\"], [\"svgIcon\", \"mat:more_vert\"], [1, \"p-gutter\", \"container\"], [1, \"flex\", \"flex-col\", \"sm:flex-row\", \"gap-4\"], [1, \"card\", \"flex-auto\"], [1, \"px-6\", \"py-4\", \"border-b\", \"flex\", \"items-center\"], [1, \"title\", \"m-0\"], [1, \"px-6\", \"py-4\", \"flex\", \"flex-col\", 3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"required\", \"\"], [\"class\", \"mat-small\", 4, \"ngIf\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [3, \"svgIcon\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", \"required\", \"\", 3, \"type\"], [1, \"flex\", \"items-center\", \"justify-end\", \"gap-2\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"mat-small\"]],\n  template: function UserCreateUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"vex-secondary-toolbar\", 0);\n      i0.ɵɵelement(1, \"vex-breadcrumbs\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵelement(3, \"mat-icon\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"h2\", 8);\n      i0.ɵɵtext(9, \"Gestor de usuarios\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 9)(11, \"mat-form-field\")(12, \"mat-label\");\n      i0.ɵɵtext(13, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵtemplate(15, UserCreateUpdateComponent_mat_hint_15_Template, 2, 0, \"mat-hint\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Apellidos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 10);\n      i0.ɵɵtemplate(20, UserCreateUpdateComponent_mat_hint_20_Template, 2, 0, \"mat-hint\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"mat-form-field\", 12)(22, \"mat-label\");\n      i0.ɵɵtext(23, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 13);\n      i0.ɵɵtemplate(25, UserCreateUpdateComponent_mat_error_25_Template, 2, 0, \"mat-error\", 14);\n      i0.ɵɵtemplate(26, UserCreateUpdateComponent_mat_error_26_Template, 2, 0, \"mat-error\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-form-field\", 12)(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 15);\n      i0.ɵɵelementStart(31, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function UserCreateUpdateComponent_Template_button_click_31_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelement(32, \"mat-icon\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, UserCreateUpdateComponent_mat_error_33_Template, 2, 0, \"mat-error\", 14);\n      i0.ɵɵtemplate(34, UserCreateUpdateComponent_mat_error_34_Template, 2, 0, \"mat-error\", 14);\n      i0.ɵɵtemplate(35, UserCreateUpdateComponent_mat_error_35_Template, 2, 0, \"mat-error\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"mat-form-field\", 12)(37, \"mat-label\");\n      i0.ɵɵtext(38, \"Confirmar contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 18);\n      i0.ɵɵelementStart(40, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function UserCreateUpdateComponent_Template_button_click_40_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelement(41, \"mat-icon\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(42, UserCreateUpdateComponent_mat_error_42_Template, 2, 0, \"mat-error\", 14);\n      i0.ɵɵtemplate(43, UserCreateUpdateComponent_mat_error_43_Template, 2, 0, \"mat-error\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"div\", 19)(45, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function UserCreateUpdateComponent_Template_button_click_45_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(46, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function UserCreateUpdateComponent_Template_button_click_47_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵtext(48, \"Guardar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"crumbs\", i0.ɵɵpureFunction0(21, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"@stagger\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"@fadeInUp\", undefined);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.get(\"name\").invalid && ctx.userForm.get(\"name\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.get(\"name\").invalid && ctx.userForm.get(\"name\").touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.controls.email.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.controls.email.hasError(\"email\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"svgIcon\", ctx.hide ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.controls.password.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.controls.password.hasError(\"minlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.controls.password.hasError(\"passwordStrength\"));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"svgIcon\", ctx.hide ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.controls.confirmPassword.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.userForm.hasError(\"notSame\"));\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i4.NgIf, i1.FormGroupDirective, i1.FormControlName, i5.MatInput, i6.MatFormField, i6.MatLabel, i6.MatHint, i6.MatError, i6.MatSuffix, i7.MatButton, i7.MatIconButton, i8.MatIcon, i9.SecondaryToolbarComponent, i10.BreadcrumbsComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  data: {\n    animation: [stagger20ms, fadeInUp400ms]\n  }\n});","map":{"version":3,"mappings":"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","names":["Validators","fadeInUp400ms","stagger20ms","i0","UserCreateUpdateComponent","constructor","fb","userService","route","router","userForm","group","name","required","surname","email","password","minLength","passwordValidator","confirmPassword","validator","checkPasswords","ngOnInit","userId","snapshot","paramMap","get","mode","langData","getLangById","patchValue","defaults","formControl","value","hasUpperCase","test","hasLowerCase","hasNumeric","hasSpecialChar","passwordStrength","pass","controls","confirmPass","notSame","save","createUser","lengthValidator","control","regex","length","cancel","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\el-sotano-backoffice\\src\\app\\pages\\user\\user-create-update\\user-create-update.component.ts","D:\\Projects\\el-sotano-backoffice\\src\\app\\pages\\user\\user-create-update\\user-create-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { fadeInUp400ms } from 'src/@vex/animations/fade-in-up.animation';\nimport { stagger20ms } from 'src/@vex/animations/stagger.animation';\nimport { LangService } from 'src/service/langService';\nimport { UserService } from 'src/service/userService';\n\n@Component({\n  selector: 'vex-user-create-update',\n  templateUrl: './user-create-update.component.html',\n  styleUrls: ['./user-create-update.component.scss'],\n  animations:[stagger20ms, fadeInUp400ms]\n})\nexport class UserCreateUpdateComponent {\n  userForm: FormGroup;\n  userId: string | null = null;\n  mode: string | null = null;\n  defaults: any;\n  hide = true;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.userForm = this.fb.group({\n      name: ['', Validators.required],\n      surname: [''],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), this.passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    }, { validator: this.checkPasswords });\n  }\n\n  async ngOnInit() {\n    // if you are editing an existing lang, set userId\n    // and load the lang details using getLangById()\n    this.userId = this.route.snapshot.paramMap.get('id');\n    if (this.userId !== null) {\n      this.mode = 'update';\n      const langData = await this.userService.getLangById(this.userId);\n      if (langData) {\n        this.userForm.patchValue({\n          name: langData.name,\n          surname: langData.surname,\n          email: langData.email\n        });\n      }\n    } else {\n      this.defaults = {} as any;\n\n    }\n  }\n\n  passwordValidator(formControl: FormControl) {\n    const { value } = formControl;\n    const hasUpperCase = /[A-Z]/.test(value);\n    const hasLowerCase = /[a-z]/.test(value);\n    const hasNumeric = /[0-9]/.test(value);\n    const hasSpecialChar = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(value);\n\n    if (hasUpperCase && hasLowerCase && hasNumeric && hasSpecialChar) {\n      return null;\n    } else {\n      return { passwordStrength: true };\n    }\n  }\n\n  checkPasswords(group: FormGroup) {\n    let pass = group.controls.password.value;\n    let confirmPass = group.controls.confirmPassword.value;\n\n    return pass === confirmPass ? null : { notSame: true }\n  }\n\n  save() {\n    this.userService.createUser(this.userForm.value);\n  }\n\n  // Custom Validator\n  lengthValidator(control: AbstractControl) {\n    const value = control.value;\n    const regex = /^[a-zA-Z]{2,5}$/;\n    return regex.test(value) ? null : { length: true };\n  }\n\n  cancel() {\n    this.router.navigate(['/user']); // Navigating to /user on cancel\n  }\n}\n","<vex-secondary-toolbar current=\"Usuarios\">\n  <vex-breadcrumbs [crumbs]=\"['Usuarios', 'Gestión de Usuarios']\" class=\"flex-auto\"></vex-breadcrumbs>\n\n  <button class=\"ml-2\" color=\"primary\" mat-icon-button type=\"button\">\n    <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\n  </button>\n</vex-secondary-toolbar>\n\n<div [@stagger]=\"true\" class=\"p-gutter container\">\n\n  <div class=\"flex flex-col sm:flex-row gap-4\">\n    <div @fadeInUp class=\"card flex-auto\">\n      <div class=\"px-6 py-4 border-b flex items-center\">\n        <h2 class=\"title m-0\">Gestor de usuarios</h2>\n      </div>\n\n      <div class=\"px-6 py-4 flex flex-col\" [formGroup]=\"userForm\">\n        <mat-form-field>\n          <mat-label>Nombre</mat-label>\n          <input matInput formControlName=\"title\" required>\n          <mat-hint class=\"mat-small\" *ngIf=\"userForm.get('name').invalid && userForm.get('name').touched\">\n            Este campo es obligatorio\n          </mat-hint>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Apellidos</mat-label>\n          <input matInput formControlName=\"title\" required>\n          <mat-hint class=\"mat-small\" *ngIf=\"userForm.get('name').invalid && userForm.get('name').touched\">\n            Este campo es obligatorio\n          </mat-hint>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email</mat-label>\n          <input matInput type=\"email\" formControlName=\"email\" required>\n          <mat-error *ngIf=\"userForm.controls.email.hasError('required')\">\n            Este campo es requerido.\n          </mat-error>\n          <mat-error *ngIf=\"userForm.controls.email.hasError('email')\">\n            Debe ser un correo válido.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Contraseña</mat-label>\n          <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n            <mat-icon [svgIcon]=\"hide ? 'visibility_off' : 'visibility'\"></mat-icon>\n          </button>\n          <mat-error *ngIf=\"userForm.controls.password.hasError('required')\">\n            Este campo es requerido.\n          </mat-error>\n          <mat-error *ngIf=\"userForm.controls.password.hasError('minlength')\">\n            La contraseña debe tener al menos 6 caracteres.\n          </mat-error>\n          <mat-error *ngIf=\"userForm.controls.password.hasError('passwordStrength')\">\n            La contraseña debe contener al menos una mayúscula, una minúscula, un número y un carácter especial.\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Confirmar contraseña</mat-label>\n          <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"confirmPassword\" required>\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n            <mat-icon [svgIcon]=\"hide ? 'visibility_off' : 'visibility'\"></mat-icon>\n          </button>\n          <mat-error *ngIf=\"userForm.controls.confirmPassword.hasError('required')\">\n            Este campo es requerido.\n          </mat-error>\n          <mat-error *ngIf=\"userForm.hasError('notSame')\">\n            Las contraseñas deben coincidir.\n          </mat-error>\n        </mat-form-field>\n\n        <div class=\"flex items-center justify-end gap-2\">\n          <button mat-button type=\"button\" (click)=\"cancel()\">Cancel</button> <!-- Added (click) event here -->\n          <button color=\"primary\" mat-raised-button type=\"button\" (click)=\"save()\">Guardar</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}